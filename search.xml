<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Vscode+Eslint+Prettier写Vue项目</title>
    <url>/archives/55909.html</url>
    <content><![CDATA[<h2 id="安装-Vscode-和插件"><a href="#安装-Vscode-和插件" class="headerlink" title="安装 Vscode 和插件"></a>安装 Vscode 和插件</h2><p>首先安装<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">Vscode 官网</a>下载安装包，安装好了之后启动，然后<code>ctrl+shift+X</code>,安装以下插件</p>
<p><ol><br>    <li>Vetur</li><br>    <li>ESLint</li><br>    <li>Prettier - Code formatter</li><br></ol><br>安装完之后最好是重启下VS Code避免插件不生效的问题。</p>
<h2 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h2><p>按<code>ctrl+,</code>,打开设置界面，设置 settings.json 文件，配置如下</p>
<pre><code>{
  &quot;editor.formatOnSave&quot;: true,
    &quot;eslint.autoFixOnSave&quot;: true,
    //保存时eslint自动修复错误
    &quot;eslint.validate&quot;: [
        &quot;javascript&quot;,
        &quot;javascriptreact&quot;,
        {
            &quot;language&quot;: &quot;vue&quot;,
            &quot;autoFix&quot;: true
        }
    ],
    &quot;vetur.format.defaultFormatter.html&quot;: &quot;js-beautify-html&quot;,
    &quot;vetur.format.defaultFormatter.js&quot;: &quot;vscode-typescript&quot;,
    &quot;vetur.format.defaultFormatterOptions&quot;: {
        &quot;js-beautify-html&quot;: {
            &quot;wrap_attributes&quot;: &quot;force-aligned&quot;
        }
    },
    &quot;prettier.eslintIntegration&quot;: true,
    &quot;prettier.singleQuote&quot;: true,
    &quot;prettier.semi&quot;: false,
    &quot;javascript.format.insertSpaceBeforeFunctionParenthesis&quot;: false
}
</code></pre><p>然后就可以愉快的编码了</p>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>charles使用</title>
    <url>/archives/36932.html</url>
    <content><![CDATA[<h2 id="下载-charles-工具"><a href="#下载-charles-工具" class="headerlink" title="下载 charles 工具"></a>下载 charles 工具</h2><p>charles 破解版 链接:<a href="https://pan.baidu.com/s/1ps9VZC495UQKLjxPrsSU7w" target="_blank" rel="noopener">https://pan.baidu.com/s/1ps9VZC495UQKLjxPrsSU7w</a> 密码:uqfo</p>
<a id="more"></a>
<h2 id="电脑安装证书"><a href="#电脑安装证书" class="headerlink" title="电脑安装证书"></a>电脑安装证书</h2><pre><code>Help =&gt; SSL Proxying =&gt; Install Charles Root Certificate
</code></pre><p>之后会弹出钥匙串，如果不弹出，请自行打开钥匙串.<br>系统默认是不信任 Charles 的证书的，此时对证书右键，在弹出的下拉菜单中选择『显示简介』，点击使用此证书时，把使用系统默认改为始终信任</p>
<h2 id="手机设备安装证书"><a href="#手机设备安装证书" class="headerlink" title="手机设备安装证书"></a>手机设备安装证书</h2><pre><code>Help =&gt; SSL Proxying =&gt; Install Charles Root Certificate On a Mobile Device
</code></pre><p>进入手机设置界面<br>设置服务器代理<br>ip 为你本机的 ip，端口 8888<br>然后打开手机的浏览器，输入<br>charlesproxy.com/getssl<br>安装证书</p>
<h2 id="使用-SSL-代理"><a href="#使用-SSL-代理" class="headerlink" title="使用 SSL 代理"></a>使用 SSL 代理</h2><p>右击链接 =&gt; Enable SSL Proxying</p>
<h2 id="操作之后依旧无法抓取-https-包，显示-unknown？"><a href="#操作之后依旧无法抓取-https-包，显示-unknown？" class="headerlink" title="操作之后依旧无法抓取 https 包，显示 unknown？"></a>操作之后依旧无法抓取 https 包，显示 unknown？</h2><p>设置 =&gt; 关于本机 =&gt; 证书信任设置 =&gt; 勾选「针对根证书启用完全信任」</p>
]]></content>
      <categories>
        <category>前端调试工具</category>
      </categories>
      <tags>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建</title>
    <url>/archives/33176.html</url>
    <content><![CDATA[<h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><p>电脑安装好node和git，终端执行命令:</p>
<pre><code>sudo npm install -g hexo
</code></pre><p>接着在任意位置创建一个文件夹，如Blog，cd到该路径下执行以下命令</p>
<pre><code>hexo init
</code></pre><a id="more"></a>
<p>接下来是安装依赖包</p>
<pre><code>npm install
</code></pre><p>执行以下命令</p>
<pre><code>hexo s
</code></pre><p>在浏览器输入<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 就可以进行查看了。</p>
<h2 id="部署到gitHub"><a href="#部署到gitHub" class="headerlink" title="部署到gitHub"></a>部署到gitHub</h2><p>创建Github账号并新建项目<br>项目名称为用户名.github.io的固定写</p>
<p>编辑自己创建的本地博客文件夹中的_config.yml中的deploy</p>
<pre><code>deploy:
  type: git
  repo: git@github.com:username/username.github.io.git (我自己的git@github.com:Anne-Tao/Anne-Tao.github.io)
  branch: master
</code></pre><p>为了能够使Hexo部署到GitHub上，需要安装一个插件</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre><p>修改完成之后保存退出，然后输入以下命令</p>
<pre><code>hexo clean 
hexo g
hexo d
</code></pre><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><p>本站选的是<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a><br>在根目录下执行如下命令</p>
<pre><code>    git clone https://github.com/iissnan/hexo-theme-next themes/next
</code></pre><p>将根目录下_config.yml里theme的名称landscape修改为next</p>
<h2 id="next主题优化"><a href="#next主题优化" class="headerlink" title="next主题优化"></a>next主题优化</h2><p>本站参考别人分享的<a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a>,写的非常好，省的自己折腾了</p>
<h2 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h2><p>在根目录下source目录下新建文件名为：<code>CNAME</code>文件，直接将自己的域名如:<code>wutao.work</code>写入<br>登录<a href="https://www.aliyun.com/?utm_content=se_1000301881" target="_blank" rel="noopener">阿里云账号</a>，在域名解析界面添加3条记录</p>
<pre><code>@          A             192.30.252.153
@          A             192.30.252.154
www      CNAME         username.github.io.
</code></pre>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo -</tag>
      </tags>
  </entry>
  <entry>
    <title>git代码提交规范</title>
    <url>/archives/10104.html</url>
    <content><![CDATA[<p>git 的提交格式化有很多好处，本文整理一套自己用的提交信息格式。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><p>提交信息包括三个部分：<code>header</code>，<code>body </code>和 <code>footer</code>。</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>
</code></pre>
<p>其中，header 是必需的，body 和 footer 可以省略。</p>
<h2 id="header"><a href="#header" class="headerlink" title="header"></a>header</h2><p>Header 部分只有一行，包括俩个字段：<code>type</code>（必需）和 <code>subject</code>（必需）。</p>
<pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>type<span class="token operator">></span><span class="token punctuation">:</span> <span class="token operator">&lt;</span>subject<span class="token operator">></span>
</code></pre>
<h3 id="type"><a href="#type" class="headerlink" title="type"></a>type</h3><p>type 用于说明 commit 的类别，可以使用如下类别：</p>
<ul>
<li>feat：新功能（feature）</li>
<li>fix：修补 bug</li>
<li>doc：文档（documentation）</li>
<li>style： 格式（不影响代码运行的变动）</li>
<li>refactor：重构（即不是新增功能，也不是修改 bug 的代码变动）</li>
<li>test：增加测试</li>
<li>chore：构建过程或辅助工具的变动</li>
</ul>
<h3 id="subject"><a href="#subject" class="headerlink" title="subject"></a>subject</h3><p>subject 是 commit 目的的简短描述。</p>
<ol>
<li>以动词开头，使用第一人称现在时，比如 change，而不是 changed 或 changes</li>
<li>第一个字母小写</li>
<li>结尾不加句号（。）</li>
</ol>
<h2 id="body"><a href="#body" class="headerlink" title="body"></a>body</h2><p>Body 部分是对本次 commit 的详细描述，可以分成多行。<br>注意：应该说明代码变动的动机，以及与以前行为的对比。</p>
<h2 id="footer"><a href="#footer" class="headerlink" title="footer"></a>footer</h2><p>Footer 部分只用于两种情况：</p>
<ul>
<li>关联 Issue</li>
<li>关闭 Issue</li>
</ul>
<h3 id="关联-Issue"><a href="#关联-Issue" class="headerlink" title="关联 Issue"></a>关联 Issue</h3><p>本次提交如果和某个 issue 有关系则需要写上这个，格式如下：</p>
<pre class=" language-js"><code class="language-js">Issue #<span class="token number">1</span><span class="token punctuation">,</span> #<span class="token number">2</span><span class="token punctuation">,</span> #<span class="token number">3</span>
</code></pre>
<h3 id="关闭-Issue"><a href="#关闭-Issue" class="headerlink" title="关闭 Issue"></a>关闭 Issue</h3><p>如果当前提交信息解决了某个 issue，那么可以在 Footer 部分关闭这个 issue，关闭的格式如下：</p>
<pre class=" language-js"><code class="language-js">Close #<span class="token number">1</span><span class="token punctuation">,</span> #<span class="token number">2</span><span class="token punctuation">,</span> #<span class="token number">3</span>
</code></pre>
<h2 id="使用-commitizen-来执行规范"><a href="#使用-commitizen-来执行规范" class="headerlink" title="使用 commitizen 来执行规范"></a>使用 commitizen 来执行规范</h2><ol>
<li>全局安装:</li>
</ol>
<pre class=" language-js"><code class="language-js">sudo npm install <span class="token operator">-</span>g commitizen
</code></pre>
<ol start="2">
<li>进入目录执行:<br>commitizen init cz-conventional-changelog –save –save-exact</li>
</ol>
<p>配好后，之后用到 <code>git commit</code> 命令时，改为使用 <code>git cz</code>。就会出现选项，用来生成符合格式的 Commit message。<br><img src="/archives/10104.htm/pic.jpg" alt=""></p>
<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><pre><code>feat: 添加了分享功能
给每篇博文添加了分享功能

- 添加分享到微博功能
- 添加分享到微信功能
- 添加分享到朋友圈功能

Issue #1, #2
Close #1
</code></pre><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html" target="_blank" rel="noopener">Commit message 和 Change log 编写指南</a></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>netlify实现自动化部署</title>
    <url>/archives/10400.html</url>
    <content><![CDATA[<h2 id="使用-github-或者-gitlab-登陆-netlify"><a href="#使用-github-或者-gitlab-登陆-netlify" class="headerlink" title="使用 github 或者 gitlab 登陆 netlify"></a>使用 github 或者 gitlab 登陆 netlify</h2><p>首先，打开 netlify 网站(<a href="https://app.netlify.com/" target="_blank" rel="noopener">https://app.netlify.com/</a>)<br>然后使用 github 或者 gitlab 账号登录</p>
<h2 id="根据-github-gitlab-仓库创建网站"><a href="#根据-github-gitlab-仓库创建网站" class="headerlink" title="根据 github/gitlab 仓库创建网站"></a>根据 github/gitlab 仓库创建网站</h2><p>点击 New site from Git 按钮 然后选择仓库所在的平台已经需要部署的仓库</p>
<p><strong> 注意 </strong></p>
<ul>
<li>部署分支，默认 master</li>
<li>打包命令，诸如 npm run build，gulp build 之类</li>
<li>打包后目录，静态资源文件夹，诸如 build dist，可不填</li>
</ul>
<p>完成之后点击途中 deploy site 按钮</p>
<h2 id="设置域名，绑定域名"><a href="#设置域名，绑定域名" class="headerlink" title="设置域名，绑定域名"></a>设置域名，绑定域名</h2><p>部署完 netlify 会为我们随机生成一个 netlify 下的域名，我们可以更改其前缀名，然后绑定到自己的域名下。</p>
<p>点击 Site settings 按钮，然后在下方点击 Change site name 按钮，然后在弹出框中输入自己需要更改的前缀名，点击保存即可。<br>点击 Domain settings 按钮，然后在下方点击 Add custom domain 按钮，然后在弹出框中输入自己需要绑定的完整域名<br>这个时候会显示 ！Check DNS configuration，因为我们还没有设置域名解析到 netlify 服务器，所以这个时候需要到你自己域名的相应服务商网站登录之后在需要绑定的域名下添加一条 CNAME 解析，解析的主机记录即对应的 netlify 域名值，这样就可以使用自己的域名访问自己的网站啦</p>
<h2 id="生成-HTTPS-证书，实现-HTTPS-访问"><a href="#生成-HTTPS-证书，实现-HTTPS-访问" class="headerlink" title="生成 HTTPS 证书，实现 HTTPS 访问"></a>生成 HTTPS 证书，实现 HTTPS 访问</h2><p>点击 Verify DNS configuration 按钮，提示成功就可以用 https 访问域名了</p>
]]></content>
      <tags>
        <tag>前端部署工具</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode修改背景</title>
    <url>/archives/36995.html</url>
    <content><![CDATA[<h2 id="安装-background-插件"><a href="#安装-background-插件" class="headerlink" title="安装 background 插件"></a>安装 background 插件</h2><p><img src="/archives/36995.htm/download.jpg" alt=""><br>安装完成后，重启 vscode，进入 vscode 设置，在用户设置设置以下代码<br><img src="/archives/36995.htm/setting.jpg" alt=""></p>
<p>重启 vscode 就可以生效了。<br><img src="/archives/36995.htm/result.png`" alt=""><br>看看效果是不是很 nice。</p>
<p>以下三张图片是我自己用的，需要的自取。<br><img src="/archives/36995.htm/vscodeBg1.jpg" alt=""><br><img src="/archives/36995.htm/vscodeBg2.jpg" alt=""><br><img src="/archives/36995.htm/vscodeBg3.jpg" alt=""></p>
]]></content>
      <tags>
        <tag>前端编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>vue去哪儿</title>
    <url>/archives/4117.html</url>
    <content><![CDATA[<h2 id="环境的搭建"><a href="#环境的搭建" class="headerlink" title="环境的搭建"></a>环境的搭建</h2><h3 id="建立文件夹"><a href="#建立文件夹" class="headerlink" title="建立文件夹"></a>建立文件夹</h3><p>在电脑合适的位置建立文件夹 <code>mkdir travel</code></p>
<h3 id="使用-vue-cli-生成项目目录结构"><a href="#使用-vue-cli-生成项目目录结构" class="headerlink" title="使用 vue-cli 生成项目目录结构"></a>使用 vue-cli 生成项目目录结构</h3><p>1 检测 node，终端输入 <code>node -v</code><br>2 全局安装 vue-cli，在终端输入 <code>npm install vue-cli -g</code><br>3 终端输入 <code>vue init webpack</code></p>
<h3 id="启动环境"><a href="#启动环境" class="headerlink" title="启动环境"></a>启动环境</h3><p>终端执行<code>npm run dev</code>,然后在浏览器输入<code>http://localhost:8080</code> 进行测试</p>
<h2 id="引入库"><a href="#引入库" class="headerlink" title="引入库"></a>引入库</h2><h3 id="移动端-meta-标签修改"><a href="#移动端-meta-标签修改" class="headerlink" title="移动端 meta 标签修改"></a>移动端 meta 标签修改</h3><p>将<code>index.html</code>的 meta 改成<code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no&quot;&gt;</code></p>
<h3 id="移动端-reset-css-引入"><a href="#移动端-reset-css-引入" class="headerlink" title="移动端 reset.css 引入"></a>移动端 reset.css 引入</h3><p>在<code>src/assets</code>新建一个文件夹 <code>styles</code>,将 reset.css 放到该文件夹中，然后在 main.js <code>import &#39;styles/reset.css&#39;</code>，这里注意可以在 build/webpack.base.conf.js 配置 alias <code>&#39;styles&#39;: resolve(&#39;src/assets/styles&#39;)</code> ，方便以后引入 style 文件夹的文件</p>
<h3 id="引入-iconfont"><a href="#引入-iconfont" class="headerlink" title="引入 iconfont"></a>引入 iconfont</h3><p>在<code>src/assets/styles</code>新建 iconfont 文件夹，将’iconfont.eot,新建 iconfont 文件夹，将’iconfont.svg,iconfont.ttf,iconfont.woff‘放入其中，iconfont.css 放入<code>src/assets/styles</code>下，记得修改 iconfont.css 内容的路径。然后在 main.js<code>mport &#39;styles/iconfont.css&#39;</code></p>
<h3 id="移动端-300ms"><a href="#移动端-300ms" class="headerlink" title="移动端 300ms"></a>移动端 300ms</h3><p>控制台执行<code>npm install fastclick -S</code>之后，在 main.js 中引入，并绑定到 body</p>
<pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> FastClick <span class="token keyword">from</span> <span class="token string">'fastclick'</span>
FastClick<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span>
</code></pre>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>vue项目实战</tag>
      </tags>
  </entry>
  <entry>
    <title>you need to konw css</title>
    <url>/archives/22145.html</url>
    <content><![CDATA[<h2 id="边框与背景"><a href="#边框与背景" class="headerlink" title="边框与背景"></a>边框与背景</h2><h3 id="边框内圆角"><a href="#边框内圆角" class="headerlink" title="边框内圆角"></a>边框内圆角</h3><iframe width="100%" height="300" src="//jsfiddle.net/Wt19930325/tvx0urem/28/embedded/html,css,result/" allowfullscreen="allowfullscreen" allowpaymentrequest="" frameborder="0"></iframe>

<h3 id="条纹背景"><a href="#条纹背景" class="headerlink" title="条纹背景"></a>条纹背景</h3><p>1.进度条</p>
<iframe width="100%" height="300" src="//jsfiddle.net/Wt19930325/cLhjup7a/77/embedded/html,css,result/" allowfullscreen="allowfullscreen" allowpaymentrequest="" frameborder="0"></iframe><br>2.不规则卡片<br><iframe width="100%" height="300" src="//jsfiddle.net/Wt19930325/cLhjup7a/114/embedded/html,css,result/" allowfullscreen="allowfullscreen" allowpaymentrequest="" frameborder="0"></iframe>

<h2 id="常见形状"><a href="#常见形状" class="headerlink" title="常见形状"></a>常见形状</h2><h3 id="圆与椭圆"><a href="#圆与椭圆" class="headerlink" title="圆与椭圆"></a>圆与椭圆</h3><iframe width="100%" height="300" src="//jsfiddle.net/Wt19930325/cLhjup7a/209/embedded/html,css,result/" allowfullscreen="allowfullscreen" allowpaymentrequest="" frameborder="0"></iframe>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>koa2学习</title>
    <url>/archives/13541.html</url>
    <content><![CDATA[<h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><p>新建一个文件夹如koa2文件夹</p>
<pre><code>cd koa2
npm init -y
npm install --save koa
</code></pre><a id="more"></a>
<p>在文件夹新建一个app.js,输入以下代码</p>
<pre><code>const Koa = require(&#39;koa&#39;)
connst app = new Koa()
app.use( async ( ctx ) =&gt; {
  ctx.body = &#39;hello koa2&#39;
})
app.listen(3000)
console.log(&#39;[demo] start-quick is starting at port 3000&#39;)
</code></pre><p>然后在命令行输入</p>
<pre><code>node app.js
</code></pre><p>或者执行npm start,npm start命令会让npm执行定义在package.json文件中的start对应命令：</p>
<pre><code>&quot;scripts&quot;: {
    &quot;start&quot;: &quot;node app.js&quot;
}
</code></pre><h2 id="Get请求的接收"><a href="#Get请求的接收" class="headerlink" title="Get请求的接收"></a>Get请求的接收</h2><h3 id="query和querystring区别"><a href="#query和querystring区别" class="headerlink" title="query和querystring区别"></a>query和querystring区别</h3><p>在koa2中GET请求通过request接收，但是接受的方法有两种：query和querystring。<br>1.query：返回的是格式化好的参数对象。<br>2.querystring：返回的是请求字符串。<br>看如下例子的输出结果<br>demo01.js</p>
<pre><code>const Koa = require(&#39;koa&#39;);
const app = new Koa();
app.use(async(ctx)=&gt;{
    let url =ctx.url;
    let request =ctx.request;
    let req_query = request.query;
    let req_querystring = request.querystring;
    ctx.body={
        url,
        req_query,
        req_querystring
    }
});
app.listen(3000,()=&gt;{
    console.log(&#39;[demo] server is starting at port 3000&#39;);
});
</code></pre><p>编写好后，在终端中使用node demo1.js启动服务。启动一切正常可在浏览器中使用<a href="http://127.0.0.1:3000?user=wutao&amp;age=18" target="_blank" rel="noopener">http://127.0.0.1:3000?user=wutao&amp;age=18</a> 来进行访问。我们在网页中可以得到一串JSON字符串.</p>
<pre><code>{&quot;url&quot;:&quot;/?user=wutao&amp;age=18&quot;,&quot;req_query&quot;:{&quot;user&quot;:&quot;wutao&quot;,&quot;age&quot;:&quot;18&quot;},&quot;req_querystring&quot;:&quot;user=wutao&amp;age=18&quot;}
</code></pre><h3 id="直接从ctx中获取Get请求"><a href="#直接从ctx中获取Get请求" class="headerlink" title="直接从ctx中获取Get请求"></a>直接从ctx中获取Get请求</h3><p>demo02.js</p>
<pre><code>const Koa = require(&#39;koa&#39;);
const app = new Koa();
app.use(async(ctx)=&gt;{
    let url =ctx.url;
    //从request中获取GET请求
    let request =ctx.request;
    let req_query = request.query;
    let req_querystring = request.querystring;
    //从上下文中直接获取
    let ctx_query = ctx.query;
    let ctx_querystring = ctx.querystring;
    ctx.body={
        url,
        req_query,
        req_querystring,
        ctx_query,
        ctx_querystring
    }
});
app.listen(3000,()=&gt;{
    console.log(&#39;[demo] server is starting at port 3000&#39;);
});
</code></pre><p>编写好后，在终端中使用node demo1.js启动服务。启动一切正常可在浏览器中使用<a href="http://127.0.0.1:3000?user=wutao&amp;age=18" target="_blank" rel="noopener">http://127.0.0.1:3000?user=wutao&amp;age=18</a> 来进行访问。我们在网页中可以得到一串JSON字符串.</p>
<h2 id="post请求接收"><a href="#post请求接收" class="headerlink" title="post请求接收"></a>post请求接收</h2><h3 id="获取Post请求的步骤："><a href="#获取Post请求的步骤：" class="headerlink" title="获取Post请求的步骤："></a>获取Post请求的步骤：</h3><p>1.解析上下文ctx中的原生nodex.js对象req。<br>2.将POST表单数据解析成query string-字符串.(例如:user=wutao&amp;age=18)<br>3.将字符串转换成JSON格式。</p>
<h3 id="ctx-method-得到请求类型"><a href="#ctx-method-得到请求类型" class="headerlink" title="ctx.method 得到请求类型"></a>ctx.method 得到请求类型</h3><p>demo03.js</p>
<pre><code>const Koa = require(&#39;koa&#39;);
const app = new Koa();
app.use(async(ctx) =&gt; {
     //当请求时GET请求时，显示表单让用户填写
     if(ctx.url === &#39;/&#39; &amp;&amp; ctx.method === &#39;GET&#39;){
         let html =`
            &lt;h1&gt;Koa2 request post demo&lt;/h1&gt;
            &lt;form method=&quot;POST&quot;  action=&quot;/&quot;&gt;
                &lt;p&gt;userName&lt;/p&gt;
                &lt;input name=&quot;userName&quot; /&gt; &lt;br/&gt;
                &lt;p&gt;age&lt;/p&gt;
                &lt;input name=&quot;age&quot; /&gt; &lt;br/&gt;
                &lt;p&gt;webSite&lt;/p&gt;
                &lt;input name=&#39;webSite&#39; /&gt;&lt;br/&gt;
                &lt;button type=&quot;submit&quot;&gt;submit&lt;/button&gt;
            &lt;/form&gt;
        `;
        ctx.body = html;
     }else if(ctx.url === &#39;/&#39; &amp;&amp; ctx.method === &#39;POST&#39;){
         ctx.body = &#39;接受数据了&#39;
     }else{
         //其它请求显示404页面
        ctx.body=&#39;&lt;h1&gt;404!&lt;/h1&gt;&#39;;
     }
} )
app.listen(3000,()=&gt;{
    console.log(&#39;[demo] server is starting at port 3000&#39;);
})
</code></pre><h3 id="解析Node原生POST参数"><a href="#解析Node原生POST参数" class="headerlink" title="解析Node原生POST参数"></a>解析Node原生POST参数</h3><pre><code>function parsePostData(ctx){
    return new Promise((resolve,reject)=&gt;{
        try{
            let postdata=&quot;&quot;;
            ctx.req.on(&#39;data&#39;,(data)=&gt;{
                postdata += data
            })
            ctx.req.addListener(&quot;end&quot;,function(){
                resolve(postdata);
            })
        }catch(error){
            reject(error);
        }
    })
}
</code></pre><p>然后在上demo03.js接收POST请求的处理方法里，修改代码如下。</p>
<pre><code>else if(ctx.url===&#39;/&#39; &amp;&amp; ctx.method===&#39;POST&#39;){
    let pastData=await parsePostData(ctx);
    ctx.body=pastData;
}
</code></pre><h3 id="POST字符串解析JSON对象"><a href="#POST字符串解析JSON对象" class="headerlink" title="POST字符串解析JSON对象"></a>POST字符串解析JSON对象</h3><p>上面得到的post参数是一个字符串，接下来将这个字符串封装成json对象</p>
<pre><code>function parseQueryStr(queryStr){
    let queryData={};
    let queryStrList = queryStr.split(&#39;&amp;&#39;);
    for( let [index,queryStr] of queryStrList.entries() ){
        let itemList = queryStr.split(&#39;=&#39;);
        console.log(itemList);
        queryData[itemList[0]] = decodeURIComponent(itemList[1]);
    } 
    return queryData
}
</code></pre><p>将demo03.js的 parsePostData做些修改</p>
<pre><code>function parsePostData(ctx){
    return new Promise((resolve,reject)=&gt;{
        try{
            let postdata=&quot;&quot;;
            ctx.req.on(&#39;data&#39;,(data)=&gt;{
                postdata += data
            })
            ctx.req.addListener(&quot;end&quot;,function(){
                let parseData = parseQueryStr( postdata )
                resolve(parseData);
            })
        }catch(error){
            reject(error);
        }
    });
}
</code></pre><h2 id="koa-bodyparser中间件"><a href="#koa-bodyparser中间件" class="headerlink" title="koa-bodyparser中间件"></a>koa-bodyparser中间件</h2><p>koa-bodyparser中间件可以把koa2上下文的formData数据解析到ctx.request.body中。</p>
<h3 id="安装中间价"><a href="#安装中间价" class="headerlink" title="安装中间价"></a>安装中间价</h3><pre><code>npm install --save koa-bodyparser@3
</code></pre><h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><p>安装完成后，需要在代码中引入并使用。我们在代码顶部用require进行引入。</p>
<pre><code>const bodyParser = require(&#39;koa-bodyparser&#39;);
</code></pre><p>然后进行使用，如果不使用是没办法调用的，使用代码如下。</p>
<pre><code>app.use(bodyParser());
</code></pre><p>demo04.js代码如下</p>
<pre><code>const Koa  = require(&#39;koa&#39;);
const app = new Koa();
const bodyParser = require(&#39;koa-bodyparser&#39;);
app.use(bodyParser());
app.use(async(ctx)=&gt;{
    if(ctx.url===&#39;/&#39; &amp;&amp; ctx.method===&#39;GET&#39;){
        //显示表单页面
        let html=`
            &lt;h1&gt;wutao Koa2 request POST&lt;/h1&gt;
            &lt;form method=&quot;POST&quot; action=&quot;/&quot;&gt;
                &lt;p&gt;userName&lt;/p&gt;
                &lt;input name=&quot;userName&quot; /&gt;&lt;br/&gt;
                &lt;p&gt;age&lt;/p&gt;
                &lt;input name=&quot;age&quot; /&gt;&lt;br/&gt;
                &lt;p&gt;website&lt;/p&gt;
                &lt;input name=&quot;webSite&quot; /&gt;&lt;br/&gt;
                &lt;button type=&quot;submit&quot;&gt;submit&lt;/button&gt;
            &lt;/form&gt;
        `;
        ctx.body=html;
    }else if(ctx.url===&#39;/&#39; &amp;&amp; ctx.method===&#39;POST&#39;){
         let postData= ctx.request.body;
         ctx.body=postData;
    }else{
        ctx.body=&#39;&lt;h1&gt;404!&lt;/h1&gt;&#39;;
    }
});
app.listen(3000,()=&gt;{
    console.log(&#39;[demo] server is starting at port 3000&#39;);
});
</code></pre><h2 id="Koa-router中间件"><a href="#Koa-router中间件" class="headerlink" title="Koa-router中间件"></a>Koa-router中间件</h2><h3 id="安装koa-router中间件"><a href="#安装koa-router中间件" class="headerlink" title="安装koa-router中间件"></a>安装koa-router中间件</h3><pre><code>npm install --save koa-router
</code></pre><h3 id="demo案例"><a href="#demo案例" class="headerlink" title="demo案例"></a>demo案例</h3><p>demo05.js</p>
<pre><code>const Koa = require(&#39;koa&#39;);
const Router = require(&#39;koa-router&#39;);
const app = new Koa();
const router = new Router();
router.get(&#39;/&#39;, function (ctx, next) {
    ctx.body=&quot;Hello wutao&quot;;
});
app
  .use(router.routes())
  .use(router.allowedMethods());
  app.listen(3000,()=&gt;{
      console.log(&#39;starting at port 3000&#39;);
  });
</code></pre><h3 id="多页面配置"><a href="#多页面配置" class="headerlink" title="多页面配置"></a>多页面配置</h3><pre><code>const Koa = require(&#39;koa&#39;);
const Router = require(&#39;koa-router&#39;);
const app = new Koa();
const router = new Router();
router.get(&#39;/&#39;, function (ctx, next) {
    ctx.body=&quot;Hello wutao&quot;;
})
.get(&#39;/todo&#39;,(ctx,next)=&gt;{
    ctx.body=&quot;Todo page&quot;
});
app
  .use(router.routes())
  .use(router.allowedMethods());
  app.listen(3000,()=&gt;{
      console.log(&#39;starting at port 3000&#39;);
  });
</code></pre><h2 id="koa2使用cookie"><a href="#koa2使用cookie" class="headerlink" title="koa2使用cookie"></a>koa2使用cookie</h2><p>1.ctx.cookies.get(name,[optins]):读取上下文请求中的cookie。<br>2.ctx.cookies.set(name,value,[options])：在上下文中写入cookie</p>
<h3 id="写入Cookie操作"><a href="#写入Cookie操作" class="headerlink" title="写入Cookie操作"></a>写入Cookie操作</h3><p>demo06.js</p>
<pre><code>const Koa  = require(&#39;koa&#39;);
const app = new Koa();
app.use(async(ctx)=&gt;{
    if(ctx.url=== &#39;/index&#39;){
        ctx.cookies.set(
            &#39;MyName&#39;,&#39;wutao&#39;
        );
        ctx.body = &#39;cookie is ok&#39;;
    }else{
        ctx.body = &#39;hello world&#39;
    }
});
app.listen(3000,()=&gt;{
    console.log(&#39;[demo] server is starting at port 3000&#39;);
})
</code></pre><p>写好后预览，打开F12可以在Application中找到Cookies选项。就可以找到我们写入的name和value了。</p>
<h3 id="Cookie选项"><a href="#Cookie选项" class="headerlink" title="Cookie选项"></a>Cookie选项</h3><p>domain：写入cookie所在的域名<br>path：写入cookie所在的路径<br>maxAge：Cookie最大有效时长<br>expires：cookie失效时间<br>httpOnly:是否只用http请求中获得<br>overwirte：是否允许重写</p>
<pre><code>const Koa  = require(&#39;koa&#39;);
const app = new Koa();
app.use(async(ctx)=&gt;{
    if(ctx.url=== &#39;/index&#39;){
        ctx.cookies.set(
            &#39;MyName&#39;,&#39;wutao&#39;,{
                domain:&#39;127.0.0.1&#39;, // 写cookie所在的域名
                path:&#39;/index&#39;,       // 写cookie所在的路径
                maxAge:1000*60*60*24,   // cookie有效时长
                expires:new Date(&#39;2018-12-31&#39;), // cookie失效时间
                httpOnly:false,  // 是否只用于http请求中获取
                overwrite:false  // 是否允许重写
            }
        );
        ctx.body = &#39;cookie is ok&#39;;
    }else{
        ctx.body = &#39;hello world&#39;
    }
});
app.listen(3000,()=&gt;{
    console.log(&#39;[demo] server is starting at port 3000&#39;);
})
</code></pre><h3 id="读取Cookie："><a href="#读取Cookie：" class="headerlink" title="读取Cookie："></a>读取Cookie：</h3><pre><code>const Koa  = require(&#39;koa&#39;);
const app = new Koa();
app.use(async(ctx)=&gt;{
    if(ctx.url=== &#39;/index&#39;){
        ctx.cookies.set(
            &#39;MyName&#39;,&#39;wutao&#39;,{
                domain:&#39;127.0.0.1&#39;, // 写cookie所在的域名
                path:&#39;/index&#39;,       // 写cookie所在的路径
                maxAge:1000*60*60*24,   // cookie有效时长
                expires:new Date(&#39;2018-12-31&#39;), // cookie失效时间
                httpOnly:false,  // 是否只用于http请求中获取
                overwrite:false  // 是否允许重写
            }
        );
        ctx.body = &#39;cookie is ok&#39;;
    }else{
        if( ctx.cookies.get(&#39;MyName&#39;)){
            ctx.body = ctx.cookies.get(&#39;MyName&#39;);
        }else{
            ctx.body = &#39;Cookie is none&#39;;
        }
    }
});
app.listen(3000,()=&gt;{
    console.log(&#39;[demo] server is starting at port 3000&#39;);
})
</code></pre><h2 id="Koa2的模板（ejs"><a href="#Koa2的模板（ejs" class="headerlink" title="Koa2的模板（ejs)"></a>Koa2的模板（ejs)</h2><h3 id="安装中间件"><a href="#安装中间件" class="headerlink" title="安装中间件"></a>安装中间件</h3><pre><code>npm install --save koa-views
npm install --save ejs
</code></pre><h3 id="编写ejs"><a href="#编写ejs" class="headerlink" title="编写ejs"></a>编写ejs</h3><p>新建一个view的文件夹，并在它下面新建index.ejs文件。<br>views/index.ejs</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;&lt;%= title %&gt;&lt;/title&gt;http://wutao.com/wp-admin/post.php?post=2760&amp;action=edit#
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;&lt;%= title %&gt;&lt;/h1&gt;
    &lt;p&gt;EJS Welcome to &lt;%= title %&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><h3 id="编写koa文件"><a href="#编写koa文件" class="headerlink" title="编写koa文件"></a>编写koa文件</h3><pre><code>const Koa = require(&#39;koa&#39;)
const views = require(&#39;koa-views&#39;)
const path = require(&#39;path&#39;)
const app = new Koa()
// 加载模板引擎
app.use(views(path.join(__dirname, &#39;./view&#39;), {
  extension: &#39;ejs&#39;
}))
app.use( async ( ctx ) =&gt; {
  let title = &#39;hello koa2&#39;
  await ctx.render(&#39;index&#39;, {
    title
  })
})
app.listen(3000,()=&gt;{
    console.log(&#39;[demo] server is starting at port 3000&#39;);
})
</code></pre><h2 id="koa-static静态资源中间件"><a href="#koa-static静态资源中间件" class="headerlink" title="koa-static静态资源中间件"></a>koa-static静态资源中间件</h2><h3 id="安装koa-static"><a href="#安装koa-static" class="headerlink" title="安装koa-static"></a>安装koa-static</h3><pre><code>npm install --save koa-static
</code></pre><h3 id="新建static文件夹-然后在static文件中放入图片，css和js文件"><a href="#新建static文件夹-然后在static文件中放入图片，css和js文件" class="headerlink" title="新建static文件夹 然后在static文件中放入图片，css和js文件"></a>新建static文件夹 然后在static文件中放入图片，css和js文件</h3><p>demlo06.js</p>
<pre><code>const Koa = require(&#39;koa&#39;)
const path = require(&#39;path&#39;)
const static = require(&#39;koa-static&#39;)
const app = new Koa()
const staticPath = &#39;./static&#39;
app.use(static(
  path.join( __dirname,  staticPath)
))
app.use( async ( ctx ) =&gt; {
  ctx.body = &#39;hello world&#39;
})
app.listen(3000, () =&gt; {
  console.log(&#39;[demo] static-use-middleware is starting at port 3000&#39;)
})
</code></pre>]]></content>
      <categories>
        <category>前端学习</category>
      </categories>
      <tags>
        <tag>koa</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx学习</title>
    <url>/archives/50799.html</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>购买阿里云 ECS.我用的操作系统是 CentOS 7.4 64 位版本。然后建立远程链接</p>
<pre><code>ssh root@公网ip
</code></pre><h3 id="用-yum-安装必要程序"><a href="#用-yum-安装必要程序" class="headerlink" title="用 yum 安装必要程序"></a>用 yum 安装必要程序</h3><pre><code>yum -y install gcc gcc-c++ autoconf pcre-devel make automake
yum -y install wget httpd-tools vim
</code></pre><a id="more"></a>
<h3 id="建立目录"><a href="#建立目录" class="headerlink" title="建立目录"></a>建立目录</h3><p>1.在目录下建立一个文件夹例如 wutao 的文件夹。 2.进入 wutao 文件夹，命令行 cd wutao。 3.分别 mkdir 建立 app bacuup download logs work 文件夹</p>
<h3 id="基于-Yum-的方式安装-Nginx"><a href="#基于-Yum-的方式安装-Nginx" class="headerlink" title="基于 Yum 的方式安装 Nginx"></a>基于 Yum 的方式安装 Nginx</h3><pre><code>yum list | grep nginx
</code></pre><p>这时候出现以下内容<img src="http://www.jspang.com/static/upload/20181007/ljnFrPYc23562AtUSLvSIYpQ.png" alt=""><br>这个源只支持 1.1.12<br>在终端里输入:</p>
<pre><code>vim /etc/yum.repos.d/nginx.repo
</code></pre><p>将以下代码复制进去</p>
<pre><code>[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centeros/7/$basearch/
gpgcheck=0
enabled=1
</code></pre><p>按下 ESC 然后:wq 保存<br>执行命令</p>
<pre><code>yum install nginx
</code></pre><p>安装完成执行</p>
<pre><code>nginx -v
</code></pre><p>出现以下内容说明成功了<img src="http://www.jspang.com/static/upload/20181007/P6eXf6G5kJJ8L2mKDEZbHg1O.png" alt=""></p>
<h2 id="nginx-配置说明"><a href="#nginx-配置说明" class="headerlink" title="nginx 配置说明"></a>nginx 配置说明</h2><h3 id="nginx-conf-文件解读"><a href="#nginx-conf-文件解读" class="headerlink" title="nginx.conf 文件解读"></a>nginx.conf 文件解读</h3><pre><code>cd /etc/nginx
vim nginx.conf
</code></pre><pre><code>#运行用户，默认即是nginx，可以不进行设置
user  nginx;
#Nginx进程，一般设置为和CPU核数一样
worker_processes  1;
#错误日志存放目录
error_log  /var/log/nginx/error.log warn;
#进程pid存放位置
pid        /var/run/nginx.pid;
events {
    worker_connections  1024; # 单个后台进程的最大并发数
}
http {
    include       /etc/nginx/mime.types;   #文件扩展名与类型映射表
    default_type  application/octet-stream;  #默认文件类型
    #设置日志模式
    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;
                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;
                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;
    access_log  /var/log/nginx/access.log  main;   #nginx访问日志存放位置
    sendfile        on;   #开启高效传输模式
    #tcp_nopush     on;    #减少网络报文段的数量
    keepalive_timeout  65;  #保持连接的时间，也叫超时时间
    #gzip  on;  #开启gzip压缩
    include /etc/nginx/conf.d/*.conf; #包含的子配置项位置和文件
}
</code></pre><h3 id="default-conf-配置项讲"><a href="#default-conf-配置项讲" class="headerlink" title="default.conf 配置项讲"></a>default.conf 配置项讲</h3><p>进入 conf.d 目录，然后使用 vim default.conf 进行查看。</p>
<pre><code>server {
    listen       80;   #配置监听端口
    server_name  localhost;  //配置域名
    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;
    location / {
        root   /usr/share/nginx/html;     #服务默认启动目录
        index  index.html index.htm;    #默认访问文件
    }
    #error_page  404              /404.html;   # 配置404页面
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;   #错误状态码的显示页面，配置后需要重启
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}
    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}
    # deny access to .htaccess files, if Apache&#39;s document root
    # concurs with nginx&#39;s one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
</code></pre><p>我们的服务目录放在了/usr/share/nginx/html 下，可以使用命令进入看一下目录下的文件。</p>
<pre><code>cd /usr/share/nginx/html
ls
</code></pre><p>可以看到目录下面有两个文件，50x.html 和 index.html。我们可以使用 vim 进行编辑。</p>
<h3 id="阿里云的安全组配置"><a href="#阿里云的安全组配置" class="headerlink" title="阿里云的安全组配置"></a>阿里云的安全组配置</h3><p>进入阿里云控制台，并找到 ECS 实例。点击实例后边的“更多”点击“网络和安全组” ，再点击“安全组配置”右上角添加“安全组配置”进行 80 端口的设置，具体设置如图就好。<br><img src="http://jspang.com/static/upload/20181009/N3bF8FMGxljMydjEdTztVw7g.png" alt=""></p>
<h2 id="nginx-服务的启动、停止、重启"><a href="#nginx-服务的启动、停止、重启" class="headerlink" title="nginx 服务的启动、停止、重启"></a>nginx 服务的启动、停止、重启</h2><h3 id="nginx-的启动"><a href="#nginx-的启动" class="headerlink" title="nginx 的启动"></a>nginx 的启动</h3><p>在 CentOS7.4 版本里（低版本是不行的），是可以直接直接使用 nginx 启动服务的。</p>
<pre><code>nginx
</code></pre><p>使用 systemctl 命令启动</p>
<pre><code>systemctl start nginx.service
</code></pre><p>查询服务的运行状况。</p>
<pre><code>ps aux | grep nginx
</code></pre><h3 id="停止-nginx"><a href="#停止-nginx" class="headerlink" title="停止 nginx"></a>停止 nginx</h3><p>立刻停止</p>
<pre><code>nginx  -s stop
</code></pre><p>从容停止服务</p>
<pre><code>nginx -s quit
</code></pre><p>killall 方法杀死进程</p>
<pre><code>killall nginx
</code></pre><p>systemctl 停止</p>
<pre><code>systemctl stop nginx.server
</code></pre><h3 id="nginx-重启"><a href="#nginx-重启" class="headerlink" title="nginx 重启"></a>nginx 重启</h3><pre><code>systemctl restart nginx.service
</code></pre><p>在重新编写或者修改 Nginx 的配置文件后</p>
<pre><code>nginx -s reload
</code></pre><h2 id="自定义错误页面"><a href="#自定义错误页面" class="headerlink" title="自定义错误页面"></a>自定义错误页面</h2><h3 id="多错误指向一个页面"><a href="#多错误指向一个页面" class="headerlink" title="多错误指向一个页面"></a>多错误指向一个页面</h3><pre><code>cd/etc/nginx/conf.d/default.conf
</code></pre><p>可以看到这句话</p>
<pre><code>error_page   500 502 503 504  /50x.html;
</code></pre><p>error_page 指令用于自定义错误页面，500，502，503，504 这些就是 HTTP 中最常见的错误代码，/50.html 用于表示当发生上述指定的任意一个错误的时候，都是用网站根目录下的/50.html 文件进行处理。</p>
<h3 id="单独为错误置顶处理方式"><a href="#单独为错误置顶处理方式" class="headerlink" title="单独为错误置顶处理方式"></a>单独为错误置顶处理方式</h3><p>新建一个 404 错误页面</p>
<pre><code>error_page 404  /404_error.html;
</code></pre><p>然后到网站目录下新建一个 404_error.html 文件，并写入一些信息。</p>
<pre><code>&lt;html&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;body&gt;
        &lt;h1&gt;404页面没有找到!&lt;/h1&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre><h3 id="把错误码换成一个地址"><a href="#把错误码换成一个地址" class="headerlink" title="把错误码换成一个地址"></a>把错误码换成一个地址</h3><pre><code>error_page  404 http://www.w3school.com.cn/;
</code></pre><h3 id="简单实现访问控制"><a href="#简单实现访问控制" class="headerlink" title="简单实现访问控制"></a>简单实现访问控制</h3><p>可以直接在 default.conf 里进行配置。</p>
<pre><code> location / {
        deny   123.9.51.42;
        allow  45.76.202.231;
}
</code></pre><h2 id="nginx-访问权限"><a href="#nginx-访问权限" class="headerlink" title="nginx 访问权限"></a>nginx 访问权限</h2><h3 id="指令优先级"><a href="#指令优先级" class="headerlink" title="指令优先级"></a>指令优先级</h3><pre><code> location / {
    allow  45.76.202.231;
    deny   all;
}
</code></pre><p>上面的配置表示只允许 45.76.202.231 进行访问，其他的 IP 是禁止访问的。但是如果我们把 deny all 指令，移动到 allow 45.76.202.231 之前，会发现所有的 IP 都不允许访问了<br><strong>这说明了一个问题：就是在同一个块下的两个权限指令，先出现的设置会覆盖后出现的设置（也就是谁先触发，谁起作用)</strong></p>
<h3 id="复杂访问控制权限匹配"><a href="#复杂访问控制权限匹配" class="headerlink" title="复杂访问控制权限匹配"></a>复杂访问控制权限匹配</h3><pre><code>location =/img{
        allow all;
}
location =/admin{
    deny all;
}
</code></pre><h3 id="使用正则表达式设置访问权限"><a href="#使用正则表达式设置访问权限" class="headerlink" title="使用正则表达式设置访问权限"></a>使用正则表达式设置访问权限</h3><pre><code>location ~\.php$ {
    deny all;
}
</code></pre><h2 id="Nginx-设置虚拟主机"><a href="#Nginx-设置虚拟主机" class="headerlink" title="Nginx 设置虚拟主机"></a>Nginx 设置虚拟主机</h2><h3 id="基于端口号配置虚拟主机"><a href="#基于端口号配置虚拟主机" class="headerlink" title="基于端口号配置虚拟主机"></a>基于端口号配置虚拟主机</h3><p>我们可以直接配置在主文件里 etc/nginx/nginx.conf 文件里， 也可以配置在子配置文件里 etc/nginx/conf.d/default.conf,当然你也可以再新建一个文件，只要在 conf.d 文件夹下就可以了。<br>修改配置文件中的 server 选项，这时候就会有两个 server。</p>
<pre><code>server{
    listen 8001;
    server_name localhost;
    root /usr/share/nginx/html/html8001;
    index index.html;
}
</code></pre><p>然后我们就可以在浏览器中访问<a href="http://112.74.164.244:8001" target="_blank" rel="noopener">http://112.74.164.244:8001</a></p>
<h3 id="基于-IP-的虚拟主机"><a href="#基于-IP-的虚拟主机" class="headerlink" title="基于 IP 的虚拟主机"></a>基于 IP 的虚拟主机</h3><pre><code>server{
    listen 80;
    server_name 112.74.164.244;
    root /usr/share/nginx/html/html8001;
    index index.html;
}
</code></pre><h3 id="配置以域名为划分的虚拟主机"><a href="#配置以域名为划分的虚拟主机" class="headerlink" title="配置以域名为划分的虚拟主机"></a>配置以域名为划分的虚拟主机</h3><pre><code>server{
    listen 80;
    server_name nginx2.jspang.com;
    location / {
        root /usr/share/nginx/html/html8001;
        index index.html index.htm;
    }
}
</code></pre><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><pre><code>server{
    listen 80;
    server_name wutao.com;
    location / {
            proxy_pass http://wutao.com;
    }
}
</code></pre><p>一般我们反向代理的都是一个 IP<br>其它反向代理指令<br>proxy_set_header :在将客户端请求发送给后端服务器之前，更改来自客户端的请求头信息。<br>proxy_connect_timeout:配置 Nginx 与后端代理服务器尝试建立连接的超时时间。<br>proxy_read_timeout : 配置 Nginx 向后端服务器组发出 read 请求后，等待相应的超时时间。<br>proxy_send_timeout：配置 Nginx 向后端服务器组发出 write 请求后，等待相应的超时时间。<br>proxy_redirect :用于修改后端服务器返回的响应头中的 Location 和 Refresh。</p>
<h2 id="Nginx-适配-PC-或移动设备"><a href="#Nginx-适配-PC-或移动设备" class="headerlink" title="Nginx 适配 PC 或移动设备"></a>Nginx 适配 PC 或移动设备</h2><p>1.在/usr/share/nginx/目录下新建两个文件夹，分别为：pc 和 mobile 目录</p>
<pre><code>cd /usr/share/nginx
mkdir pc
mkdir mobile
</code></pre><p>2.在 pc 和 miblic 目录下，新建两个 index.html 文件，文件里下面内容</p>
<pre><code>&lt;h1&gt;I am pc!&lt;/h1&gt;
&lt;h1&gt;I am mobile!&lt;/h1&gt;
</code></pre><p>3.进入 etc/nginx 修改 nginx.conf 文件，改为下面的形式:</p>
<pre><code>server{
    listen 80;
    server_name nginx2.jspang.com;
    location / {
    root /usr/share/nginx/pc;
    if ($http_user_agent ~* &#39;(Android|webOS|iPhone|iPod|BlackBerry)&#39;) {
        root /usr/share/nginx/mobile;
    }
    index index.html;
    }
}
</code></pre><h2 id="Nginx-的-Gzip-压缩配置"><a href="#Nginx-的-Gzip-压缩配置" class="headerlink" title="Nginx 的 Gzip 压缩配置"></a>Nginx 的 Gzip 压缩配置</h2><h3 id="gzip-的配置项"><a href="#gzip-的配置项" class="headerlink" title="gzip 的配置项"></a>gzip 的配置项</h3><p>gzip : 该指令用于开启或 关闭 gzip 模块。<br>gzip_buffers : 设置系统获取几个单位的缓存用于存储 gzip 的压缩结果数据流。<br>gzip_comp_level : gzip 压缩比，压缩级别是 1-9，1 的压缩级别最低，9 的压缩级别最高。压缩级别越高压缩率越大，压缩时间越长。<br>gzip_disable : 可以通过该指令对一些特定的 User-Agent 不使用压缩功能。<br>gzip_min_length:设置允许压缩的页面最小字节数，页面字节数从相应消息头的 Content-length 中进行获取。<br>gzip_http_version：识别 HTTP 协议版本，其值可以是 1.1.或 1.0.<br>gzip_proxied : 用于设置启用或禁用从代理服务器上收到相应内容 gzip 压缩。<br>gzip_vary : 用于在响应消息头中添加 Vary：Accept-Encoding,使代理服务器根据请求头中的 Accept-Encoding 识别是否启用 gzip 压缩。</p>
<h3 id="gzip-最简单的配置"><a href="#gzip-最简单的配置" class="headerlink" title="gzip 最简单的配置"></a>gzip 最简单的配置</h3><pre><code>http {
   .....
    gzip on;
    gzip_types text/plain application/javascript text/css;
   .....
}
</code></pre><p>查看 HTTP 响应头信息。你可以清楚的看见 Content-Encoding 为 gzip 类型。</p>
]]></content>
      <categories>
        <category>前端学习</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>javaScript常用工具方法封装</title>
    <url>/archives/4120.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>总结了工作中经常用的方法<a id="more"></a></p>
<h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><h3 id="type-类型判断"><a href="#type-类型判断" class="headerlink" title="type 类型判断"></a>type 类型判断</h3><pre class=" language-js"><code class="language-js">isString <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否字符串</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'String'</span>
<span class="token punctuation">}</span>

isNumber <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否数字</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Number'</span>
<span class="token punctuation">}</span>
isBoolean <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否boolean</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Boolean'</span>
<span class="token punctuation">}</span>

isFunction <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否函数</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Function'</span>
<span class="token punctuation">}</span>

isNull <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否为null</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Null'</span>
<span class="token punctuation">}</span>

isUndefined <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否undefined</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Undefined'</span>
<span class="token punctuation">}</span>

isObj <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否对象</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Object'</span>
<span class="token punctuation">}</span>

isArray <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否数组</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Array'</span>
<span class="token punctuation">}</span>

isDate <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否时间</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Date'</span>
<span class="token punctuation">}</span>

isRegExp <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否正则</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'RegExp'</span>
<span class="token punctuation">}</span>

isError <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否错误对象</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Error'</span>
<span class="token punctuation">}</span>

isSymbol <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否Symbol函数</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Symbol'</span>
<span class="token punctuation">}</span>

isPromise <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否Promise对象</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Promise'</span>
<span class="token punctuation">}</span>

isSet <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否Set对象</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'Set'</span>
<span class="token punctuation">}</span>

isFalse <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>o <span class="token operator">||</span> o <span class="token operator">===</span> <span class="token string">'null'</span> <span class="token operator">||</span> o <span class="token operator">===</span> <span class="token string">'undefined'</span> <span class="token operator">||</span> o <span class="token operator">===</span> <span class="token string">'false'</span> <span class="token operator">||</span> o <span class="token operator">===</span> <span class="token string">'NaN'</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>

isTrue <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

isIos <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> u <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'Android'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'Linux'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//安卓手机</span>
        <span class="token comment" spellcheck="true">// return "Android";</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'iPhone'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//苹果手机</span>
        <span class="token comment" spellcheck="true">// return "iPhone";</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'iPad'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//iPad</span>
        <span class="token comment" spellcheck="true">// return "iPad";</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'Windows Phone'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//winphone手机</span>
        <span class="token comment" spellcheck="true">// return "Windows Phone";</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

isPC <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//是否为PC端</span>
    <span class="token keyword">var</span> userAgentInfo <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span>
    <span class="token keyword">var</span> Agents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Android"</span><span class="token punctuation">,</span> <span class="token string">"iPhone"</span><span class="token punctuation">,</span>
                <span class="token string">"SymbianOS"</span><span class="token punctuation">,</span> <span class="token string">"Windows Phone"</span><span class="token punctuation">,</span>
                <span class="token string">"iPad"</span><span class="token punctuation">,</span> <span class="token string">"iPod"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> v <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> v <span class="token operator">&lt;</span> Agents<span class="token punctuation">.</span>length<span class="token punctuation">;</span> v<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>userAgentInfo<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>Agents<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> flag<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">browserType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> userAgent <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//取得浏览器的userAgent字符串</span>
    <span class="token keyword">var</span> isOpera <span class="token operator">=</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Opera"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断是否Opera浏览器</span>
    <span class="token keyword">var</span> isIE <span class="token operator">=</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"compatible"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"MSIE"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isOpera<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断是否IE浏览器</span>
    <span class="token keyword">var</span> isIE11 <span class="token operator">=</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'Trident'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"rv:11.0"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> isEdge <span class="token operator">=</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Edge"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isIE<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断是否IE的Edge浏览器</span>
    <span class="token keyword">var</span> isFF <span class="token operator">=</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Firefox"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断是否Firefox浏览器</span>
    <span class="token keyword">var</span> isSafari <span class="token operator">=</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Safari"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Chrome"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断是否Safari浏览器</span>
    <span class="token keyword">var</span> isChrome <span class="token operator">=</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Chrome"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Safari"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断Chrome浏览器</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>isIE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> reIE <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">"MSIE (\\d+\\.\\d+);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reIE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> fIEVersion <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">[</span><span class="token string">"$1"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>fIEVersion <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">"IE7"</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>fIEVersion <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">"IE8"</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>fIEVersion <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">"IE9"</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>fIEVersion <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">"IE10"</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token string">"IE7以下"</span><span class="token comment" spellcheck="true">//IE版本过低</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isIE11<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">'IE11'</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isEdge<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">"Edge"</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isFF<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">"FF"</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isOpera<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">"Opera"</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isSafari<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">"Safari"</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isChrome<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">"Chrome"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

checkStr <span class="token punctuation">(</span>str<span class="token punctuation">,</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">'phone'</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">//手机号码</span>
            <span class="token keyword">return</span> <span class="token regex">/^1[3|4|5|6|7|8|9][0-9]{9}$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'tel'</span><span class="token punctuation">:</span>     <span class="token comment" spellcheck="true">//座机</span>
            <span class="token keyword">return</span> <span class="token regex">/^(0\d{2,3}-\d{7,8})(-\d{1,4})?$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'card'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">//身份证</span>
            <span class="token keyword">return</span> <span class="token regex">/(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'pwd'</span><span class="token punctuation">:</span>     <span class="token comment" spellcheck="true">//密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线</span>
            <span class="token keyword">return</span> <span class="token regex">/^[a-zA-Z]\w{5,17}$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
        <span class="token keyword">case</span> <span class="token string">'postal'</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">//邮政编码</span>
            <span class="token keyword">return</span> <span class="token regex">/[1-9]\d{5}(?!\d)/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'QQ'</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">//QQ号</span>
            <span class="token keyword">return</span> <span class="token regex">/^[1-9][0-9]{4,9}$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'email'</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">//邮箱</span>
            <span class="token keyword">return</span> <span class="token regex">/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'money'</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">//金额(小数点2位)</span>
            <span class="token keyword">return</span> <span class="token regex">/^\d*(?:\.\d{0,2})?$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'URL'</span><span class="token punctuation">:</span>     <span class="token comment" spellcheck="true">//网址</span>
            <span class="token keyword">return</span> <span class="token regex">/(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
        <span class="token keyword">case</span> <span class="token string">'IP'</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">//IP</span>
            <span class="token keyword">return</span> <span class="token regex">/((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'date'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">//日期时间</span>
            <span class="token keyword">return</span> <span class="token regex">/^(\d{4})\-(\d{2})\-(\d{2}) (\d{2})(?:\:\d{2}|:(\d{2}):(\d{2}))$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token regex">/^(\d{4})\-(\d{2})\-(\d{2})$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
        <span class="token keyword">case</span> <span class="token string">'number'</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">//数字</span>
            <span class="token keyword">return</span> <span class="token regex">/^[0-9]$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'english'</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">//英文</span>
            <span class="token keyword">return</span> <span class="token regex">/^[a-zA-Z]+$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'chinese'</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">//中文</span>
            <span class="token keyword">return</span> <span class="token regex">/^[\u4E00-\u9FA5]+$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'lower'</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">//小写</span>
            <span class="token keyword">return</span> <span class="token regex">/^[a-z]+$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'upper'</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">//大写</span>
            <span class="token keyword">return</span> <span class="token regex">/^[A-Z]+$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">'HTML'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">//HTML标记</span>
            <span class="token keyword">return</span> <span class="token regex">/&lt;("[^"]*"|'[^']*'|[^'">])*>/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 严格的身份证校验</span>
    <span class="token function">isCardID</span><span class="token punctuation">(</span>sId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex">/(^\d{15}$)|(^\d{17}(\d|X|x)$)/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>sId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你输入的身份证长度或格式错误'</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">//身份证城市</span>
        <span class="token keyword">var</span> aCity<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">"北京"</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token string">"天津"</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token string">"河北"</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">:</span><span class="token string">"山西"</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token string">"内蒙古"</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">:</span><span class="token string">"辽宁"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">:</span><span class="token string">"吉林"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">:</span><span class="token string">"黑龙江"</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">:</span><span class="token string">"上海"</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">:</span><span class="token string">"江苏"</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">:</span><span class="token string">"浙江"</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token string">"安徽"</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token string">"福建"</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token string">"江西"</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">:</span><span class="token string">"山东"</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token string">"河南"</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token string">"湖北"</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">:</span><span class="token string">"湖南"</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">:</span><span class="token string">"广东"</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">:</span><span class="token string">"广西"</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">:</span><span class="token string">"海南"</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">:</span><span class="token string">"重庆"</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">:</span><span class="token string">"四川"</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token string">"贵州"</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">:</span><span class="token string">"云南"</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">:</span><span class="token string">"西藏"</span><span class="token punctuation">,</span><span class="token number">61</span><span class="token punctuation">:</span><span class="token string">"陕西"</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">:</span><span class="token string">"甘肃"</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">:</span><span class="token string">"青海"</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">:</span><span class="token string">"宁夏"</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">:</span><span class="token string">"新疆"</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">:</span><span class="token string">"台湾"</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">:</span><span class="token string">"香港"</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">:</span><span class="token string">"澳门"</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">:</span><span class="token string">"国外"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>aCity<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你的身份证地区非法'</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">// 出生日期验证</span>
        <span class="token keyword">var</span> sBirthday<span class="token operator">=</span><span class="token punctuation">(</span>sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"-"</span><span class="token operator">+</span><span class="token function">Number</span><span class="token punctuation">(</span>sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"-"</span><span class="token operator">+</span><span class="token function">Number</span><span class="token punctuation">(</span>sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/-/g</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>sBirthday<span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>sBirthday <span class="token operator">!=</span> <span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span> <span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'身份证上的出生日期非法'</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">// 身份证号码校验</span>
        <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
            weights <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            codes <span class="token operator">=</span> <span class="token string">"10X98765432"</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sId<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sum <span class="token operator">+</span><span class="token operator">=</span> sId<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> weights<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">var</span> last <span class="token operator">=</span> codes<span class="token punctuation">[</span>sum <span class="token operator">%</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//计算出来的最后一位身份证号码</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sId<span class="token punctuation">[</span>sId<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> last<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你输入的身份证号非法'</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<h3 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/**
 * 格式化时间
 *
 * @param  {time} 时间
 * @param  {cFormat} 格式
 * @return {String} 字符串
 *
 * @example formatTime('2018-1-29', '{y}/{m}/{d} {h}:{i}:{s}') // -> 2018/01/29 00:00:00
 */</span>
<span class="token function">formatTime</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> cFormat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>time <span class="token operator">+</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        time <span class="token operator">=</span> <span class="token operator">+</span>time <span class="token operator">*</span> <span class="token number">1000</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> format <span class="token operator">=</span> cFormat <span class="token operator">||</span> <span class="token string">'{y}-{m}-{d} {h}:{i}:{s}'</span><span class="token punctuation">,</span> date
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> time <span class="token operator">===</span> <span class="token string">'object'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        date <span class="token operator">=</span> time
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> formatObj <span class="token operator">=</span> <span class="token punctuation">{</span>
        y<span class="token punctuation">:</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        m<span class="token punctuation">:</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
        d<span class="token punctuation">:</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        h<span class="token punctuation">:</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        i<span class="token punctuation">:</span> date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        s<span class="token punctuation">:</span> date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        a<span class="token punctuation">:</span> date<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> time_str <span class="token operator">=</span> format<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/{(y|m|d|h|i|s|a)+}/g</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>result<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> value <span class="token operator">=</span> formatObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">'一'</span><span class="token punctuation">,</span> <span class="token string">'二'</span><span class="token punctuation">,</span> <span class="token string">'三'</span><span class="token punctuation">,</span> <span class="token string">'四'</span><span class="token punctuation">,</span> <span class="token string">'五'</span><span class="token punctuation">,</span> <span class="token string">'六'</span><span class="token punctuation">,</span> <span class="token string">'日'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>value <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            value <span class="token operator">=</span> <span class="token string">'0'</span> <span class="token operator">+</span> value
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> value <span class="token operator">||</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> time_str
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * 返回指定长度的月份集合
 *
 * @param  {time} 时间
 * @param  {len} 长度
 * @param  {direction} 方向：  1: 前几个月;  2: 后几个月;  3:前后几个月  默认 3
 * @return {Array} 数组
 *
 * @example   getMonths('2018-1-29', 6, 1)  // ->  ["2018-1", "2017-12", "2017-11", "2017-10", "2017-9", "2017-8", "2017-7"]
 */</span>
<span class="token function">getMonths</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> len<span class="token punctuation">,</span> direction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> mm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        yy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        direction <span class="token operator">=</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>direction<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">3</span> <span class="token punctuation">:</span> direction<span class="token punctuation">,</span>
        index <span class="token operator">=</span> mm<span class="token punctuation">;</span>
    <span class="token keyword">var</span> cutMonth <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span> index <span class="token operator">&lt;=</span> len <span class="token operator">&amp;&amp;</span> index <span class="token operator">>=</span> <span class="token operator">-</span>len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> direction <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token function">formatPre</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">cutMonth</span><span class="token punctuation">(</span><span class="token operator">++</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                direction <span class="token operator">===</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token function">formatNext</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">cutMonth</span><span class="token punctuation">(</span><span class="token operator">++</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">formatCurr</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">cutMonth</span><span class="token punctuation">(</span><span class="token operator">++</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> formatNext <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>i<span class="token operator">/</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            m <span class="token operator">=</span> i<span class="token operator">%</span><span class="token number">12</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>yy<span class="token operator">+</span>y <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> formatPre <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>i<span class="token operator">/</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            m <span class="token operator">=</span> i<span class="token operator">%</span><span class="token number">12</span>
        m <span class="token operator">=</span> m<span class="token operator">===</span><span class="token number">0</span> <span class="token operator">?</span> <span class="token number">12</span> <span class="token punctuation">:</span> m
        <span class="token keyword">return</span> <span class="token punctuation">[</span>yy<span class="token operator">-</span>y <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">13</span> <span class="token operator">-</span> m<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> formatCurr <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>i<span class="token operator">/</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            yNext <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>i<span class="token operator">/</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            m <span class="token operator">=</span> i<span class="token operator">%</span><span class="token number">12</span><span class="token punctuation">,</span>
            mNext <span class="token operator">=</span> m<span class="token operator">===</span><span class="token number">0</span> <span class="token operator">?</span> <span class="token number">12</span> <span class="token punctuation">:</span> m
        <span class="token keyword">return</span> <span class="token punctuation">[</span>yy<span class="token operator">-</span>yNext <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">13</span> <span class="token operator">-</span> mNext<span class="token punctuation">)</span><span class="token punctuation">,</span>yy<span class="token operator">+</span>y <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">// 数组去重</span>
    <span class="token keyword">var</span> unique <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span> Array<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">'from'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>n<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    n<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    r<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> r<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> direction <span class="token operator">!==</span> <span class="token number">3</span> <span class="token operator">?</span> <span class="token function">cutMonth</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token function">unique</span><span class="token punctuation">(</span><span class="token function">cutMonth</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> t2<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>t2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * 返回指定长度的天数集合
 *
 * @param  {time} 时间
 * @param  {len} 长度
 * @param  {direction} 方向： 1: 前几天;  2: 后几天;  3:前后几天  默认 3
 * @return {Array} 数组
 *
 * @example date.getDays('2018-1-29', 6) // -> ["2018-1-26", "2018-1-27", "2018-1-28", "2018-1-29", "2018-1-30", "2018-1-31", "2018-2-1"]
 */</span>
<span class="token function">getDays</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> len<span class="token punctuation">,</span> diretion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> tt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span>
    <span class="token keyword">var</span> getDay <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>day<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span>
        t<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> day<span class="token punctuation">)</span>
        <span class="token keyword">var</span> m <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span>
        <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>m<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>t<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>diretion <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>diretion <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">getDay</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>tt<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">getDay</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> diretion <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>tt<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>tt<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>
        diretion <span class="token operator">===</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token punctuation">[</span>tt<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>tt<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">:</span> arr
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * @param  {s} 秒数
 * @return {String} 字符串
 *
 * @example formatHMS(3610) // -> 1h0m10s
 */</span>
formatHMS <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">''</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">></span> <span class="token number">3600</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        str <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>s<span class="token operator">/</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'h'</span><span class="token operator">+</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>s<span class="token operator">%</span><span class="token number">3600</span><span class="token operator">/</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'m'</span><span class="token operator">+</span>s<span class="token operator">%</span><span class="token number">60</span><span class="token operator">+</span><span class="token string">'s'</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>s <span class="token operator">></span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        str <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>s<span class="token operator">/</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'m'</span><span class="token operator">+</span>s<span class="token operator">%</span><span class="token number">60</span><span class="token operator">+</span><span class="token string">'s'</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        str <span class="token operator">=</span> s<span class="token operator">%</span><span class="token number">60</span><span class="token operator">+</span><span class="token string">'s'</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> str
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*获取某月有多少天*/</span>
getMonthOfDay <span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span>
    <span class="token keyword">var</span> year <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> mouth <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">var</span> days

    <span class="token comment" spellcheck="true">//当月份为二月时，根据闰年还是非闰年判断天数</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mouth <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        days <span class="token operator">=</span> <span class="token punctuation">(</span>year<span class="token operator">%</span><span class="token number">4</span><span class="token operator">==</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> year<span class="token operator">%</span><span class="token number">100</span><span class="token operator">==</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> year<span class="token operator">%</span><span class="token number">400</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>year<span class="token operator">%</span><span class="token number">4</span><span class="token operator">==</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> year<span class="token operator">%</span><span class="token number">100</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">28</span> <span class="token punctuation">:</span> <span class="token number">29</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mouth <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> mouth <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">||</span> mouth <span class="token operator">==</span> <span class="token number">5</span> <span class="token operator">||</span> mouth <span class="token operator">==</span> <span class="token number">7</span> <span class="token operator">||</span> mouth <span class="token operator">==</span> <span class="token number">8</span> <span class="token operator">||</span> mouth <span class="token operator">==</span> <span class="token number">10</span> <span class="token operator">||</span> mouth <span class="token operator">==</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//月份为：1,3,5,7,8,10,12 时，为大月.则天数为31；</span>
        days <span class="token operator">=</span> <span class="token number">31</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//其他月份，天数为：30.</span>
        days <span class="token operator">=</span> <span class="token number">30</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> days
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*获取某年有多少天*/</span>
getYearOfDay <span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> firstDayYear <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getFirstDayOfYear</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> lastDayYear <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLastDayOfYear</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> numSecond <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>lastDayYear<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>firstDayYear<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>numSecond<span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*获取某年的第一天*/</span>
getFirstDayOfYear <span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> year <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> year <span class="token operator">+</span> <span class="token string">"-01-01 00:00:00"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*获取某年最后一天*/</span>
getLastDayOfYear <span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> year <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> dateString <span class="token operator">=</span> year <span class="token operator">+</span> <span class="token string">"-12-01 00:00:00"</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> endDay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMonthOfDay</span><span class="token punctuation">(</span>dateString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> year <span class="token operator">+</span> <span class="token string">"-12-"</span> <span class="token operator">+</span> endDay <span class="token operator">+</span> <span class="token string">" 23:59:59"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*获取某个日期是当年中的第几天*/</span>
getDayOfYear <span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> firstDayYear <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getFirstDayOfYear</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> numSecond <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>firstDayYear<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>numSecond<span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*获取某个日期在这一年的第几周*/</span>
getDayOfYearWeek <span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> numdays <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDayOfYear</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>numdays <span class="token operator">/</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre>
<h3 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*判断一个元素是否在数组中*/</span>
contains <span class="token punctuation">(</span>arr<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * @param  {arr} 数组
 * @param  {fn} 回调函数
 * @return {undefined}
 */</span>
each <span class="token punctuation">(</span>arr<span class="token punctuation">,</span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fn <span class="token operator">=</span> fn <span class="token operator">||</span> Function<span class="token punctuation">;</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> res <span class="token operator">=</span> fn<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>res <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> a<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * @param  {arr} 数组
 * @param  {fn} 回调函数
 * @param  {thisObj} this指向
 * @return {Array}
 */</span>
map <span class="token punctuation">(</span>arr<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> thisObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> scope <span class="token operator">=</span> thisObj <span class="token operator">||</span> window<span class="token punctuation">;</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> res <span class="token operator">=</span> fn<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>scope<span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>res <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> a<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * @param  {arr} 数组
 * @param  {type} 1：从小到大   2：从大到小   3：随机
 * @return {Array}
 */</span>
sort <span class="token punctuation">(</span>arr<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> b <span class="token operator">-</span> a<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*去重*/</span>
unique <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> Array<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">'from'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>n<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                n<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                r<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> r<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">// 注：上面 else 里面的排重并不能区分 2 和 '2'，但能减少用indexOf带来的性能,暂时没找到替代的方法。。。</span>
    <span class="token comment" spellcheck="true">/* 正确排重
    if ( Array.hasOwnProperty('from') ) {
        return Array.from(new Set(arr))
    }else{
        var r = [], NaNBol = true
        for(var i=0; i &lt; arr.length; i++) {
            if (arr[i] !== arr[i]) {
                if (NaNBol &amp;&amp; r.indexOf(arr[i]) === -1) {
                    r.push(arr[i])
                    NaNBol = false
                }
            }else{
                if(r.indexOf(arr[i]) === -1) r.push(arr[i])
            }
        }
        return r
    }

     */</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*求两个集合的并集*/</span>
union <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> newArr <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unique</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*求两个集合的交集*/</span>
intersect <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> _this <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    a <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unique</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> _this<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> o<span class="token punctuation">)</span> <span class="token operator">?</span> o <span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*删除其中一个元素*/</span>
remove <span class="token punctuation">(</span>arr<span class="token punctuation">,</span> ele<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> index <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*将类数组转换为数组的方法*/</span>
formArray <span class="token punctuation">(</span>ary<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>ary<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr <span class="token operator">=</span> ary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        arr <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ary<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*最大值*/</span>
max <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span>max<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*最小值*/</span>
min <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span>min<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*求和*/</span>
sum <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>pre<span class="token punctuation">,</span> cur<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> pre <span class="token operator">+</span> cur
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*平均值*/</span>
average <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token operator">/</span>arr<span class="token punctuation">.</span>length
<span class="token punctuation">}</span>

</code></pre>
<h3 id="String-字符串操作"><a href="#String-字符串操作" class="headerlink" title="String 字符串操作"></a>String 字符串操作</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/**
 * 去除空格
 * @param  {str}
 * @param  {type}
 *       type:  1-所有空格  2-前后空格  3-前空格 4-后空格
 * @return {String}
 */</span>
trim <span class="token punctuation">(</span>str<span class="token punctuation">,</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    type <span class="token operator">=</span> type <span class="token operator">||</span> <span class="token number">1</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/\s+/g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/(^\s*)|(\s*$)/g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/(^\s*)/g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/(\s*$)/g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * @param  {str}
 * @param  {type}
 *       type:  1:首字母大写  2：首页母小写  3：大小写转换  4：全部大写  5：全部小写
 * @return {String}
 */</span>
changeCase <span class="token punctuation">(</span>str<span class="token punctuation">,</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    type <span class="token operator">=</span> type <span class="token operator">||</span> <span class="token number">4</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/\b\w+\b/g</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/\b\w+\b/g</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/[a-z]/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> word<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token keyword">return</span> word<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
        <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*
    检测密码强度
*/</span>
checkPwd <span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> Lv <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Lv
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/[0-9]/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Lv<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/[a-z]/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Lv<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/[A-Z]/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Lv<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/[\.|-|_]/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Lv<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Lv<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*过滤html代码(把&lt;>转换)*/</span>
filterTag <span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/&amp;/ig</span><span class="token punctuation">,</span> <span class="token string">"&amp;amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/&lt;/ig</span><span class="token punctuation">,</span> <span class="token string">"&amp;lt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/>/ig</span><span class="token punctuation">,</span> <span class="token string">"&amp;gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">"&amp;nbsp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> str<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre>
<h3 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*随机数范围*/</span>
random <span class="token punctuation">(</span>min<span class="token punctuation">,</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>min <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>max<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> min <span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*将阿拉伯数字翻译成中文的大写数字*/</span>
numberToChinese <span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> AA <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">"零"</span><span class="token punctuation">,</span> <span class="token string">"一"</span><span class="token punctuation">,</span> <span class="token string">"二"</span><span class="token punctuation">,</span> <span class="token string">"三"</span><span class="token punctuation">,</span> <span class="token string">"四"</span><span class="token punctuation">,</span> <span class="token string">"五"</span><span class="token punctuation">,</span> <span class="token string">"六"</span><span class="token punctuation">,</span> <span class="token string">"七"</span><span class="token punctuation">,</span> <span class="token string">"八"</span><span class="token punctuation">,</span> <span class="token string">"九"</span><span class="token punctuation">,</span> <span class="token string">"十"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> BB <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"十"</span><span class="token punctuation">,</span> <span class="token string">"百"</span><span class="token punctuation">,</span> <span class="token string">"仟"</span><span class="token punctuation">,</span> <span class="token string">"萬"</span><span class="token punctuation">,</span> <span class="token string">"億"</span><span class="token punctuation">,</span> <span class="token string">"点"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">+</span> num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/(^0*)/g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
        re <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span>
                re <span class="token operator">=</span> BB<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">"0{4}//d{"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"}$"</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    re <span class="token operator">=</span> BB<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">8</span><span class="token punctuation">:</span>
                re <span class="token operator">=</span> BB<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
                BB<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> BB<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>k <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            re <span class="token operator">=</span> AA<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            re <span class="token operator">=</span> AA<span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> BB<span class="token punctuation">[</span>k <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
        k<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 加上小数部分(如果有小数部分)</span>
    <span class="token punctuation">{</span>
        re <span class="token operator">+</span><span class="token operator">=</span> BB<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            re <span class="token operator">+</span><span class="token operator">=</span> AA<span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>re <span class="token operator">==</span> <span class="token string">'一十'</span><span class="token punctuation">)</span>
        re <span class="token operator">=</span> <span class="token string">"十"</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^一/</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> re<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>
        re <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"一"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> re<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*将数字转换为大写金额*/</span>
changeToChinese <span class="token punctuation">(</span>Num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//判断如果传递进来的不是字符的话转换为字符</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> Num <span class="token operator">==</span> <span class="token string">"number"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Num <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>Num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        Num <span class="token operator">=</span> Num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/,/g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//替换tomoney()中的“,”</span>
        Num <span class="token operator">=</span> Num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/ /g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//替换tomoney()中的空格</span>
        Num <span class="token operator">=</span> Num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/￥/g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//替换掉可能出现的￥字符</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>Num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//验证输入的字符是否为数字</span>
            <span class="token comment" spellcheck="true">//alert("请检查小写金额是否正确");</span>
            <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//字符处理完毕后开始转换，采用前后两部分分别转换</span>
        <span class="token keyword">var</span> part <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>Num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> newchar <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//小数点前进行转化</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">//若数量超过拾亿单位，提示</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">var</span> tmpnewchar <span class="token operator">=</span> <span class="token string">""</span>
            <span class="token keyword">var</span> perchar <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">switch</span><span class="token punctuation">(</span>perchar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token string">"0"</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> <span class="token string">"零"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"1"</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> <span class="token string">"壹"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"2"</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> <span class="token string">"贰"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"3"</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> <span class="token string">"叁"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"4"</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> <span class="token string">"肆"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"5"</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> <span class="token string">"伍"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"6"</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> <span class="token string">"陆"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"7"</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> <span class="token string">"柒"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"8"</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> <span class="token string">"捌"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"9"</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> <span class="token string">"玖"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">switch</span><span class="token punctuation">(</span>part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"元"</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"拾"</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"佰"</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"仟"</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"万"</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"拾"</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">6</span><span class="token punctuation">:</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"佰"</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">7</span><span class="token punctuation">:</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"仟"</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">8</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"亿"</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">9</span><span class="token punctuation">:</span>
                    tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"拾"</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">var</span> newchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> newchar<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">//小数点之后进行转化</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>Num<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// alert("小数点之后只能保留两位,系统将自动截断");</span>
                part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                tmpnewchar <span class="token operator">=</span> <span class="token string">""</span>
                perchar <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                <span class="token keyword">switch</span><span class="token punctuation">(</span>perchar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token string">"0"</span><span class="token punctuation">:</span>
                        tmpnewchar <span class="token operator">=</span> <span class="token string">"零"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token string">"1"</span><span class="token punctuation">:</span>
                        tmpnewchar <span class="token operator">=</span> <span class="token string">"壹"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token string">"2"</span><span class="token punctuation">:</span>
                        tmpnewchar <span class="token operator">=</span> <span class="token string">"贰"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token string">"3"</span><span class="token punctuation">:</span>
                        tmpnewchar <span class="token operator">=</span> <span class="token string">"叁"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token string">"4"</span><span class="token punctuation">:</span>
                        tmpnewchar <span class="token operator">=</span> <span class="token string">"肆"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token string">"5"</span><span class="token punctuation">:</span>
                        tmpnewchar <span class="token operator">=</span> <span class="token string">"伍"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token string">"6"</span><span class="token punctuation">:</span>
                        tmpnewchar <span class="token operator">=</span> <span class="token string">"陆"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token string">"7"</span><span class="token punctuation">:</span>
                        tmpnewchar <span class="token operator">=</span> <span class="token string">"柒"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token string">"8"</span><span class="token punctuation">:</span>
                        tmpnewchar <span class="token operator">=</span> <span class="token string">"捌"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token string">"9"</span><span class="token punctuation">:</span>
                        tmpnewchar <span class="token operator">=</span> <span class="token string">"玖"</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"角"</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">"分"</span><span class="token punctuation">;</span>
                newchar <span class="token operator">=</span> newchar <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">//替换所有无用汉字</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>newchar<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">"零零"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"零零"</span><span class="token punctuation">,</span> <span class="token string">"零"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"零亿"</span><span class="token punctuation">,</span> <span class="token string">"亿"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"亿万"</span><span class="token punctuation">,</span> <span class="token string">"亿"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"零万"</span><span class="token punctuation">,</span> <span class="token string">"万"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"零元"</span><span class="token punctuation">,</span> <span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"零角"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"零分"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>newchar<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>newchar<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"元"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            newchar <span class="token operator">=</span> newchar <span class="token operator">+</span> <span class="token string">"整"</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> newchar<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre>
<h3 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/**
 * @param  {setting}
 */</span>
<span class="token function">ajax</span><span class="token punctuation">(</span>setting<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//设置参数的初始值</span>
    <span class="token keyword">var</span> opts<span class="token operator">=</span><span class="token punctuation">{</span>
        method<span class="token punctuation">:</span> <span class="token punctuation">(</span>setting<span class="token punctuation">.</span>method <span class="token operator">||</span> <span class="token string">"GET"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//请求方式</span>
        url<span class="token punctuation">:</span> setting<span class="token punctuation">.</span>url <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 请求地址</span>
        <span class="token keyword">async</span><span class="token punctuation">:</span> setting<span class="token punctuation">.</span><span class="token keyword">async</span> <span class="token operator">||</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 是否异步</span>
        dataType<span class="token punctuation">:</span> setting<span class="token punctuation">.</span>dataType <span class="token operator">||</span> <span class="token string">"json"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 解析方式</span>
        data<span class="token punctuation">:</span> setting<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 参数</span>
        success<span class="token punctuation">:</span> setting<span class="token punctuation">.</span>success <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 请求成功回调</span>
        error<span class="token punctuation">:</span> setting<span class="token punctuation">.</span>error <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// 请求失败回调</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 参数格式化</span>
    <span class="token keyword">function</span> params_format <span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">''</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            str <span class="token operator">+</span><span class="token operator">=</span> i <span class="token operator">+</span> <span class="token string">'='</span> <span class="token operator">+</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'&amp;'</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 创建ajax对象</span>
    <span class="token keyword">var</span> xhr<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 连接服务器open(方法GET/POST，请求地址， 异步传输)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'GET'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>method<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>url <span class="token operator">+</span> <span class="token string">"?"</span> <span class="token operator">+</span> <span class="token function">params_format</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> opts<span class="token punctuation">.</span><span class="token keyword">async</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>method<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>url<span class="token punctuation">,</span> opts<span class="token punctuation">.</span><span class="token keyword">async</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span><span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/*
    ** 每当readyState改变时，就会触发onreadystatechange事件
    ** readyState属性存储有XMLHttpRequest的状态信息
    ** 0 ：请求未初始化
    ** 1 ：服务器连接已建立
    ** 2 ：请求已接受
    ** 3 : 请求处理中
    ** 4 ：请求已完成，且相应就绪
    */</span>
    xhr<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">||</span> xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">304</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>dataType<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token string">"json"</span><span class="token punctuation">:</span>
                    <span class="token keyword">var</span> json <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    opts<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"xml"</span><span class="token punctuation">:</span>
                    opts<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseXML<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">default</span><span class="token punctuation">:</span>
                    opts<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    xhr<span class="token punctuation">.</span>onerror <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        opts<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * @param  {url}
 * @param  {setting}
 * @return {Promise}
 */</span>
<span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> setting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//设置参数的初始值</span>
    <span class="token keyword">let</span> opts<span class="token operator">=</span><span class="token punctuation">{</span>
        method<span class="token punctuation">:</span> <span class="token punctuation">(</span>setting<span class="token punctuation">.</span>method <span class="token operator">||</span> <span class="token string">'GET'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//请求方式</span>
        headers <span class="token punctuation">:</span> setting<span class="token punctuation">.</span>headers  <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 请求头设置</span>
        credentials <span class="token punctuation">:</span> setting<span class="token punctuation">.</span>credentials  <span class="token operator">||</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 设置cookie是否一起发送</span>
        body<span class="token punctuation">:</span> setting<span class="token punctuation">.</span>body <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        mode <span class="token punctuation">:</span> setting<span class="token punctuation">.</span>mode  <span class="token operator">||</span> <span class="token string">'no-cors'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 可以设置 cors, no-cors, same-origin</span>
        redirect <span class="token punctuation">:</span> setting<span class="token punctuation">.</span>redirect  <span class="token operator">||</span> <span class="token string">'follow'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// follow, error, manual</span>
        cache <span class="token punctuation">:</span> setting<span class="token punctuation">.</span>cache  <span class="token operator">||</span> <span class="token string">'default'</span> <span class="token comment" spellcheck="true">// 设置 cache 模式 (default, reload, no-cache)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> dataType <span class="token operator">=</span> setting<span class="token punctuation">.</span>dataType <span class="token operator">||</span> <span class="token string">"json"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 解析方式</span>
        data <span class="token operator">=</span> setting<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token string">""</span> <span class="token comment" spellcheck="true">// 参数</span>

    <span class="token comment" spellcheck="true">// 参数格式化</span>
    <span class="token keyword">function</span> params_format <span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">''</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            str <span class="token operator">+</span><span class="token operator">=</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;`</span></span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">'GET'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        url <span class="token operator">=</span> url <span class="token operator">+</span> <span class="token punctuation">(</span>data<span class="token operator">?</span><span class="token template-string"><span class="token string">`?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">params_format</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        setting<span class="token punctuation">.</span>body <span class="token operator">=</span> data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span> <span class="token keyword">async</span> res <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> data <span class="token operator">=</span> dataType <span class="token operator">===</span> <span class="token string">'text'</span> <span class="token operator">?</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>
                dataType <span class="token operator">===</span> <span class="token string">'blob'</span> <span class="token operator">?</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span> e <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre>
<h3 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h3><pre class=" language-js"><code class="language-js">$ <span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> type <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'#'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>querySelecotor<span class="token punctuation">)</span> <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span>
            <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>selector<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'.'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>querySelecotorAll<span class="token punctuation">)</span> <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span>
            <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span>selector<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> document<span class="token punctuation">[</span><span class="token string">'querySelectorAll'</span> <span class="token operator">?</span> <span class="token string">'querySelectorAll'</span><span class="token punctuation">:</span><span class="token string">'getElementsByTagName'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*检测类名*/</span>
hasClass <span class="token punctuation">(</span>ele<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ele<span class="token punctuation">.</span>className<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">'(\\s|^)'</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'(\\s|$)'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*添加类名*/</span>
addClass <span class="token punctuation">(</span>ele<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span> ele<span class="token punctuation">.</span>className <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">" "</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*删除类名*/</span>
removeClass <span class="token punctuation">(</span>ele<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">'(\\s|^)'</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'(\\s|$)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ele<span class="token punctuation">.</span>className <span class="token operator">=</span> ele<span class="token punctuation">.</span>className<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*替换类名*/</span>
replaceClass <span class="token punctuation">(</span>ele<span class="token punctuation">,</span> newName<span class="token punctuation">,</span> oldName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> oldName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> newName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*获取兄弟节点*/</span>
siblings <span class="token punctuation">(</span>ele<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span>parentNode<span class="token punctuation">)</span>
    <span class="token keyword">var</span> chid <span class="token operator">=</span> ele<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>children<span class="token punctuation">,</span>eleMatch <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> chid<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>chid<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> ele<span class="token punctuation">)</span><span class="token punctuation">{</span>
            eleMatch<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> eleMatch<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*获取行间样式属性*/</span>
getByStyle <span class="token punctuation">(</span>obj<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>currentStyle<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span>  obj<span class="token punctuation">.</span>currentStyle<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span>  <span class="token function">getComputedStyle</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre>
<h3 id="Storage-储存操作"><a href="#Storage-储存操作" class="headerlink" title="Storage 储存操作"></a>Storage 储存操作</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">StorageFn</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ls <span class="token operator">=</span> window<span class="token punctuation">.</span>localStorage
    <span class="token keyword">this</span><span class="token punctuation">.</span>ss <span class="token operator">=</span> window<span class="token punctuation">.</span>sessionStorage
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/*-----------------cookie---------------------*/</span>
  <span class="token comment" spellcheck="true">/*设置cookie*/</span>
  <span class="token function">setCookie</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> day<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> setting <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>setting<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"Object"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> setting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> oDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        oDate<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>oDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> day<span class="token punctuation">)</span>
        document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token string">"="</span> <span class="token operator">+</span> setting<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">";expires="</span> <span class="token operator">+</span> oDate
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> oDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      oDate<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>oDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> day<span class="token punctuation">)</span>
      document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">"="</span> <span class="token operator">+</span> value <span class="token operator">+</span> <span class="token string">";expires="</span> <span class="token operator">+</span> oDate
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/*获取cookie*/</span>
  <span class="token function">getCookie</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> arr <span class="token operator">=</span> document<span class="token punctuation">.</span>cookie<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"; "</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> arr2 <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arr2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token string">""</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/*删除cookie*/</span>
  <span class="token function">removeCookie</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setCookie</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/*-----------------localStorage---------------------*/</span>
  <span class="token comment" spellcheck="true">/*设置localStorage*/</span>
  <span class="token function">setLocal</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> setting <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>setting<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"Object"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> setting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ls<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>setting<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>ls<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/*获取localStorage*/</span>
  <span class="token function">getLocal</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token keyword">return</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ls<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/*移除localStorage*/</span>
  <span class="token function">removeLocal</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ls<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/*移除所有localStorage*/</span>
  <span class="token function">clearLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ls<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/*-----------------sessionStorage---------------------*/</span>
  <span class="token comment" spellcheck="true">/*设置sessionStorage*/</span>
  <span class="token function">setSession</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> setting <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>setting<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"Object"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> setting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ss<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>setting<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>ss<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/*获取sessionStorage*/</span>
  <span class="token function">getSession</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token keyword">return</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ss<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/*移除sessionStorage*/</span>
  <span class="token function">removeSession</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ss<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/*移除所有sessionStorage*/</span>
  <span class="token function">clearSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ss<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<h3 id="Other-其它操作"><a href="#Other-其它操作" class="headerlink" title="Other 其它操作"></a>Other 其它操作</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*获取网址参数*/</span>
<span class="token function">getURL</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">"(^|&amp;)"</span><span class="token operator">+</span> name <span class="token operator">+</span><span class="token string">"=([^&amp;]*)(&amp;|$)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> r <span class="token operator">=</span> <span class="token function">decodeURI</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span>  r<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*获取全部url参数,并转换成json对象*/</span>
getUrlAllParams <span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> url <span class="token operator">=</span> url <span class="token operator">?</span> url <span class="token punctuation">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>
    <span class="token keyword">var</span> _pa <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        _arrS <span class="token operator">=</span> _pa<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        _rs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> _len <span class="token operator">=</span> _arrS<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> _len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> pos <span class="token operator">=</span> _arrS<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">var</span> name <span class="token operator">=</span> _arrS<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">,</span>
            value <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>_arrS<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>pos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _rs<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> _rs<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*删除url指定参数，返回url*/</span>
<span class="token function">delParamsUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> baseUrl <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'?'</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> query <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token operator">></span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token keyword">var</span> arr <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            obj<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">delete</span> obj<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> url <span class="token operator">=</span> baseUrl <span class="token operator">+</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token operator">/</span><span class="token punctuation">[</span>\<span class="token string">"\{\}]/g,"</span><span class="token string">").replace(/\:/g,"</span><span class="token operator">=</span><span class="token string">").replace(/\,/g,"</span><span class="token operator">&amp;</span>"<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> url
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> url<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*获取十六进制随机颜色*/</span>
getRandomColor <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">'#'</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">-</span> h<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">)</span> <span class="token operator">+</span> h<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0x1000000</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*图片加载*/</span>
<span class="token function">imgLoadAll</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>callback<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> arrImg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            arrImg<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arrImg<span class="token punctuation">.</span>length <span class="token operator">==</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*音频加载*/</span>
<span class="token function">loadAudio</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> audio <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Audio</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>
    audio<span class="token punctuation">.</span>onloadedmetadata <span class="token operator">=</span> callback<span class="token punctuation">;</span>
    audio<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*DOM转字符串*/</span>
<span class="token function">domToStirng</span><span class="token punctuation">(</span>htmlDOM<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> div<span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    div<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>htmlDOM<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> div<span class="token punctuation">.</span>innerHTML
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*字符串转DOM*/</span>
<span class="token function">stringToDom</span><span class="token punctuation">(</span>htmlString<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> div<span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    div<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>htmlString<span class="token punctuation">;</span>
    <span class="token keyword">return</span> div<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * 光标所在位置插入字符，并设置光标位置
 *
 * @param {dom} 输入框
 * @param {val} 插入的值
 * @param {posLen} 光标位置处在 插入的值的哪个位置
 */</span>
setCursorPosition <span class="token punctuation">(</span>dom<span class="token punctuation">,</span>val<span class="token punctuation">,</span>posLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> cursorPosition <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>dom<span class="token punctuation">.</span>selectionStart<span class="token punctuation">)</span><span class="token punctuation">{</span>
        cursorPosition <span class="token operator">=</span> dom<span class="token punctuation">.</span>selectionStart<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertAtCursor</span><span class="token punctuation">(</span>dom<span class="token punctuation">,</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    dom<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>posLen<span class="token punctuation">)</span>
    dom<span class="token punctuation">.</span><span class="token function">setSelectionRange</span><span class="token punctuation">(</span>dom<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">,</span>cursorPosition <span class="token operator">+</span> <span class="token punctuation">(</span>posLen <span class="token operator">||</span> val<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*光标所在位置插入字符*/</span>
<span class="token function">insertAtCursor</span><span class="token punctuation">(</span>dom<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>selection<span class="token punctuation">)</span><span class="token punctuation">{</span>
        dom<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sel <span class="token operator">=</span> document<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sel<span class="token punctuation">.</span>text <span class="token operator">=</span> val<span class="token punctuation">;</span>
        sel<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dom<span class="token punctuation">.</span>selectionStart <span class="token operator">||</span> dom<span class="token punctuation">.</span>selectionStart <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> startPos <span class="token operator">=</span> dom<span class="token punctuation">.</span>selectionStart<span class="token punctuation">;</span>
        <span class="token keyword">let</span> endPos <span class="token operator">=</span> dom<span class="token punctuation">.</span>selectionEnd<span class="token punctuation">;</span>
        <span class="token keyword">let</span> restoreTop <span class="token operator">=</span> dom<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>
        dom<span class="token punctuation">.</span>value <span class="token operator">=</span> dom<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> startPos<span class="token punctuation">)</span> <span class="token operator">+</span> val <span class="token operator">+</span> dom<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>endPos<span class="token punctuation">,</span> dom<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>restoreTop <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            dom<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> restoreTop<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        dom<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dom<span class="token punctuation">.</span>selectionStart <span class="token operator">=</span> startPos <span class="token operator">+</span> val<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        dom<span class="token punctuation">.</span>selectionEnd <span class="token operator">=</span> startPos <span class="token operator">+</span> val<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        dom<span class="token punctuation">.</span>value <span class="token operator">+</span><span class="token operator">=</span> val<span class="token punctuation">;</span>
        dom<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre>
<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="pc-reset-PC-样式初始化"><a href="#pc-reset-PC-样式初始化" class="headerlink" title="pc-reset PC 样式初始化"></a>pc-reset PC 样式初始化</h3><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* normalize.css */</span>

<span class="token selector">html </span><span class="token punctuation">{</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.15</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">-ms-text-size-adjust</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
  <span class="token property">-webkit-text-size-adjust</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">body </span><span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">article,
aside,
footer,
header,
nav,
section </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">h1 </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2</span>em<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0.67</span>em <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">figcaption,
figure,
main </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">figure </span><span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">1</span>em <span class="token number">40</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">hr </span><span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">pre </span><span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> monospace, monospace<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">a </span><span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">-webkit-text-decoration-skip</span><span class="token punctuation">:</span> objects<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">abbr<span class="token attribute">[title]</span> </span><span class="token punctuation">{</span>
  <span class="token property">border-bottom</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline dotted<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">b,
strong </span><span class="token punctuation">{</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">b,
strong </span><span class="token punctuation">{</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bolder<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">code,
kbd,
samp </span><span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> monospace, monospace<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">dfn </span><span class="token punctuation">{</span>
  <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">mark </span><span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#ff0</span><span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">small </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">80%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">sub,
sup </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">75%</span><span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">sub </span><span class="token punctuation">{</span>
  <span class="token property">bottom</span><span class="token punctuation">:</span> -<span class="token number">0.25</span>em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">sup </span><span class="token punctuation">{</span>
  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">0.5</span>em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">audio,
video </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">audio<span class="token pseudo-class">:not([controls])</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">img </span><span class="token punctuation">{</span>
  <span class="token property">border-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">svg<span class="token pseudo-class">:not(:root)</span> </span><span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">button,
input,
optgroup,
select,
textarea </span><span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> sans-serif<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.15</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">button,
input </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">button,
select </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">text-transform</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

button,
html [type=<span class="token string">"button"</span>],

<span class="token comment" spellcheck="true">/* 1 */</span>

<span class="token selector"><span class="token attribute">[type="reset"]</span>,
<span class="token attribute">[type="submit"]</span> </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> button<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">button<span class="token pseudo-element">::-moz-focus-inner</span>,
<span class="token attribute">[type="button"]</span><span class="token pseudo-element">::-moz-focus-inner</span>,
<span class="token attribute">[type="reset"]</span><span class="token pseudo-element">::-moz-focus-inner</span>,
<span class="token attribute">[type="submit"]</span><span class="token pseudo-element">::-moz-focus-inner</span> </span><span class="token punctuation">{</span>
  <span class="token property">border-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">button<span class="token pseudo-class">:-moz-focusring</span>,
<span class="token attribute">[type="button"]</span><span class="token pseudo-class">:-moz-focusring</span>,
<span class="token attribute">[type="reset"]</span><span class="token pseudo-class">:-moz-focusring</span>,
<span class="token attribute">[type="submit"]</span><span class="token pseudo-class">:-moz-focusring</span> </span><span class="token punctuation">{</span>
  <span class="token property">outline</span><span class="token punctuation">:</span> <span class="token number">1</span>px dotted ButtonText<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">fieldset </span><span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0.35</span>em <span class="token number">0.75</span>em <span class="token number">0.625</span>em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">legend </span><span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
  <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 3 */</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
<span class="token punctuation">}</span>

<span class="token selector">progress </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">textarea </span><span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token attribute">[type="checkbox"]</span>,
<span class="token attribute">[type="radio"]</span> </span><span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token attribute">[type="number"]</span><span class="token pseudo-element">::-webkit-inner-spin-button</span>,
<span class="token attribute">[type="number"]</span><span class="token pseudo-element">::-webkit-outer-spin-button</span> </span><span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token attribute">[type="search"]</span> </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> textfield<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">outline-offset</span><span class="token punctuation">:</span> -<span class="token number">2</span>px<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token attribute">[type="search"]</span><span class="token pseudo-element">::-webkit-search-cancel-button</span>,
<span class="token attribute">[type="search"]</span><span class="token pseudo-element">::-webkit-search-decoration</span> </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token pseudo-element">::-webkit-file-upload-button</span> </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> button<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">font</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

details,

<span class="token comment" spellcheck="true">/* 1 */</span>

<span class="token selector">menu </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">summary </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> list-item<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">canvas </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">template </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token attribute">[hidden]</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* reset */</span>

<span class="token selector">html,
body,
h1,
h2,
h3,
h4,
h5,
h6,
div,
dl,
dt,
dd,
ul,
ol,
li,
p,
blockquote,
pre,
hr,
figure,
table,
caption,
th,
td,
form,
fieldset,
legend,
input,
button,
textarea,
menu </span><span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<h3 id="Phone-reset"><a href="#Phone-reset" class="headerlink" title="Phone-reset"></a>Phone-reset</h3><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* normalize.css */</span>

<span class="token selector">html </span><span class="token punctuation">{</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.15</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">-ms-text-size-adjust</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
  <span class="token property">-webkit-text-size-adjust</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">body </span><span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">article,
aside,
footer,
header,
nav,
section </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">h1 </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2</span>em<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0.67</span>em <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">figcaption,
figure,
main </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">figure </span><span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">1</span>em <span class="token number">40</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">hr </span><span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">pre </span><span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> monospace, monospace<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">a </span><span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">-webkit-text-decoration-skip</span><span class="token punctuation">:</span> objects<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">abbr<span class="token attribute">[title]</span> </span><span class="token punctuation">{</span>
  <span class="token property">border-bottom</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline dotted<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">b,
strong </span><span class="token punctuation">{</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">b,
strong </span><span class="token punctuation">{</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bolder<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">code,
kbd,
samp </span><span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> monospace, monospace<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">dfn </span><span class="token punctuation">{</span>
  <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">mark </span><span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#ff0</span><span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">small </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">80%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">sub,
sup </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">75%</span><span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">sub </span><span class="token punctuation">{</span>
  <span class="token property">bottom</span><span class="token punctuation">:</span> -<span class="token number">0.25</span>em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">sup </span><span class="token punctuation">{</span>
  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">0.5</span>em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">audio,
video </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">audio<span class="token pseudo-class">:not([controls])</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">img </span><span class="token punctuation">{</span>
  <span class="token property">border-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">svg<span class="token pseudo-class">:not(:root)</span> </span><span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">button,
input,
optgroup,
select,
textarea </span><span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> sans-serif<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.15</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">button,
input </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">button,
select </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">text-transform</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

button,
html [type=<span class="token string">"button"</span>],

<span class="token comment" spellcheck="true">/* 1 */</span>

<span class="token selector"><span class="token attribute">[type="reset"]</span>,
<span class="token attribute">[type="submit"]</span> </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> button<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">button<span class="token pseudo-element">::-moz-focus-inner</span>,
<span class="token attribute">[type="button"]</span><span class="token pseudo-element">::-moz-focus-inner</span>,
<span class="token attribute">[type="reset"]</span><span class="token pseudo-element">::-moz-focus-inner</span>,
<span class="token attribute">[type="submit"]</span><span class="token pseudo-element">::-moz-focus-inner</span> </span><span class="token punctuation">{</span>
  <span class="token property">border-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">button<span class="token pseudo-class">:-moz-focusring</span>,
<span class="token attribute">[type="button"]</span><span class="token pseudo-class">:-moz-focusring</span>,
<span class="token attribute">[type="reset"]</span><span class="token pseudo-class">:-moz-focusring</span>,
<span class="token attribute">[type="submit"]</span><span class="token pseudo-class">:-moz-focusring</span> </span><span class="token punctuation">{</span>
  <span class="token property">outline</span><span class="token punctuation">:</span> <span class="token number">1</span>px dotted ButtonText<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">fieldset </span><span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0.35</span>em <span class="token number">0.75</span>em <span class="token number">0.625</span>em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">legend </span><span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
  <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 3 */</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
<span class="token punctuation">}</span>

<span class="token selector">progress </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector">textarea </span><span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token attribute">[type="checkbox"]</span>,
<span class="token attribute">[type="radio"]</span> </span><span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token attribute">[type="number"]</span><span class="token pseudo-element">::-webkit-inner-spin-button</span>,
<span class="token attribute">[type="number"]</span><span class="token pseudo-element">::-webkit-outer-spin-button</span> </span><span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token attribute">[type="search"]</span> </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> textfield<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">outline-offset</span><span class="token punctuation">:</span> -<span class="token number">2</span>px<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token attribute">[type="search"]</span><span class="token pseudo-element">::-webkit-search-cancel-button</span>,
<span class="token attribute">[type="search"]</span><span class="token pseudo-element">::-webkit-search-decoration</span> </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token pseudo-element">::-webkit-file-upload-button</span> </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> button<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 1 */</span>
  <span class="token property">font</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 2 */</span>
<span class="token punctuation">}</span>

details,

<span class="token comment" spellcheck="true">/* 1 */</span>

<span class="token selector">menu </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">summary </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> list-item<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">canvas </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">template </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token attribute">[hidden]</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* reset */</span>

<span class="token selector">html,
body,
h1,
h2,
h3,
h4,
h5,
h6,
div,
dl,
dt,
dd,
ul,
ol,
li,
p,
blockquote,
pre,
hr,
figure,
table,
caption,
th,
td,
form,
fieldset,
legend,
input,
button,
textarea,
menu </span><span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">html,
body </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 禁止选中文本 */</span>
  <span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">font</span><span class="token punctuation">:</span> Oswald, <span class="token string">"Open Sans"</span>, Helvetica, Arial, sans-serif<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* 禁止长按链接与图片弹出菜单 */</span>

<span class="token selector">a,
img </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-touch-callout</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*ios android去除自带阴影的样式*/</span>

<span class="token selector">a,
input </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-tap-highlight-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">input<span class="token attribute">[type="text"]</span> </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<h3 id="公共样式提取"><a href="#公共样式提取" class="headerlink" title="公共样式提取"></a>公共样式提取</h3><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 禁止选中文本 */</span>
<span class="token selector"><span class="token class">.usn</span> </span><span class="token punctuation">{</span>
  <span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">-moz-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">-ms-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">-o-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">/* 浮动 */</span>
<span class="token selector"><span class="token class">.fl</span> </span><span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.fr</span> </span><span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.cf</span> </span><span class="token punctuation">{</span>
  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.cf</span><span class="token pseudo-element">:after</span> </span><span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"."</span><span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
  <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* 元素类型 */</span>
<span class="token selector"><span class="token class">.db</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.dn</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.di</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.dib</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.transparent</span> </span><span class="token punctuation">{</span>
  <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*文字排版、颜色*/</span>
<span class="token selector"><span class="token class">.f12</span> </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.f14</span> </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.f16</span> </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.f18</span> </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.f20</span> </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.fb</span> </span><span class="token punctuation">{</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.fn</span> </span><span class="token punctuation">{</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.t2</span> </span><span class="token punctuation">{</span>
  <span class="token property">text-indent</span><span class="token punctuation">:</span> <span class="token number">2</span>em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.red</span>,
a<span class="token class">.red</span> </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#cc0031</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.darkblue</span>,
a<span class="token class">.darkblue</span> </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#039</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.gray</span>,
a<span class="token class">.gray</span> </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#878787</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.lh150</span> </span><span class="token punctuation">{</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">150%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.lh180</span> </span><span class="token punctuation">{</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">180%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.lh200</span> </span><span class="token punctuation">{</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">200%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.unl</span> </span><span class="token punctuation">{</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.no_unl</span> </span><span class="token punctuation">{</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.tl</span> </span><span class="token punctuation">{</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.tc</span> </span><span class="token punctuation">{</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.tr</span> </span><span class="token punctuation">{</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.tj</span> </span><span class="token punctuation">{</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> justify<span class="token punctuation">;</span>
  <span class="token property">text-justify</span><span class="token punctuation">:</span> inter-ideograph<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.wn</span> </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 强制不换行 */</span>
  <span class="token property">word-wrap</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.wb</span> </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 强制换行 */</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
  <span class="token property">word-wrap</span><span class="token punctuation">:</span> break-word<span class="token punctuation">;</span>
  <span class="token property">word-break</span><span class="token punctuation">:</span> break-all<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.wp</span> </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 保持空白序列*/</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> pre-wrap<span class="token punctuation">;</span>
  <span class="token property">word-wrap</span><span class="token punctuation">:</span> break-word<span class="token punctuation">;</span>
  <span class="token property">word-break</span><span class="token punctuation">:</span> break-all<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.wes</span> </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 多出部分用省略号表示 , 用于一行 */</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
  <span class="token property">word-wrap</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
  <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.wes-2</span> </span><span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/* 适用于webkit内核和移动端 */</span>
  <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>
  <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>
  <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.wes-3</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>
  <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>
  <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.wes-4</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>
  <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>
  <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* 溢出样式 */</span>
<span class="token selector"><span class="token class">.ofh</span> </span><span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.ofs</span> </span><span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.ofa</span> </span><span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.ofv</span> </span><span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* 定位方式 */</span>
<span class="token selector"><span class="token class">.ps</span> </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> static<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.pr</span> </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
  <span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.pa</span> </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.pf</span> </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* 垂直对齐方式 */</span>
<span class="token selector"><span class="token class">.vt</span> </span><span class="token punctuation">{</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.vm</span> </span><span class="token punctuation">{</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.vb</span> </span><span class="token punctuation">{</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> bottom<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* 鼠标样式 */</span>
<span class="token selector"><span class="token class">.csd</span> </span><span class="token punctuation">{</span>
  <span class="token property">cursor</span><span class="token punctuation">:</span> default<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.csp</span> </span><span class="token punctuation">{</span>
  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.csh</span> </span><span class="token punctuation">{</span>
  <span class="token property">cursor</span><span class="token punctuation">:</span> help<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.csm</span> </span><span class="token punctuation">{</span>
  <span class="token property">cursor</span><span class="token punctuation">:</span> move<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* flex布局 */</span>
<span class="token selector"><span class="token class">.df-sb</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.df-sa</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* 垂直居中 */</span>
<span class="token selector"><span class="token class">.df-c</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.tb-c</span> </span><span class="token punctuation">{</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.ts-c</span> </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>
  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.ts-mc</span> </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* 辅助 */</span>
<span class="token selector"><span class="token class">.mask-fixed-wrapper</span> </span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>
  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">999</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.bg-cover</span> </span><span class="token punctuation">{</span>
  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>
  <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>
  <span class="token property">background-position</span><span class="token punctuation">:</span> center center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.bg-cover-all</span> </span><span class="token punctuation">{</span>
  <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">100%</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>
  <span class="token property">background-position</span><span class="token punctuation">:</span> center center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
</search>
